{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"administration/admin/","title":"Introduction","text":""},{"location":"administration/admin/#gramps-web-administrators-guide","title":"Gramps Web Administrator's Guide","text":"<p>Whether you have set up your own instance of Gramps Web or signed up for a pre-installed one, the next step is to populate and manage your family tree database.</p> <p>The focus of this section is on administrative tasks performed by tree owners. Usually, there is one tree owner for each family tree database (although as tree owner, you can also create other tree owner accounts).</p> <p>This section only deals with actions that can be performed from the web interface. For command line tools or server configuration, see the previous section Setup.</p>"},{"location":"administration/export/","title":"Export data","text":""},{"location":"administration/export/#back-up-your-family-tree","title":"Back up your family tree","text":"<p>To create a backup of your family tree, open the Export page in Gramps Web and select the Gramps XML format.</p> <p>Clicking on \"export\" will generate the file and start the download once it is ready.</p> <p>Note that if your Gramps Web user does not have permission to view private records, the export will not be a full backup, since it will not contain any private records.</p>"},{"location":"administration/export/#share-your-family-tree-with-users-of-other-genealogy-programs","title":"Share your family tree with users of other genealogy programs","text":"<p>When sharing genealogical data as Gramps XML is not an option, you can also export a GEDCOM file. Note that this is not suited as a backup of your Gramps Web tree.</p>"},{"location":"administration/export/#back-up-your-media-files","title":"Back up your media files","text":"<p>To back up your media files, you can create and download a ZIP archive of all media files on the Export page.</p> <p>Note that, especially for large trees, this can be an expensive operation for the server and should only be done if absolutely necessary.</p> <p>A better option to back up your media files on a regular basis is to use the Gramps Web Sync addon (which itself is not a backup solution) and create incremental backups on your local computer.</p> <p>In both bases, if your Gramps Web user does not have permission to view private records, the export will not contain files of private media objects.</p>"},{"location":"administration/export/#move-to-a-different-gramps-web-instance","title":"Move to a different Gramps Web instance","text":"<p>Gramps Web does not lock you in with a specific provider and you can always move to a different Gramps Web instance without loosing any data, and without having direct access to either of the servers.</p> <p>To achieve a full migration, follow these steps (assuming you have tree owner permissions):</p> <ol> <li>Go to the Export page and export your tree as a Gramps XML (<code>.gramps</code>) file. If you use the Sync addon, you can also generate the export in Gramps desktop.</li> <li>On the Export page, generate &amp; download a media archive. If you use the Sync addon, you can also simply ZIP your local Gramps media folder.</li> <li>Go to Settings &gt; Administration &gt; Manage users and click the \"Export user details\" button. It will download a JSON file.</li> <li>In the new Gramps Web instance, open the Import page. Import the <code>.gramps</code> file exported in step 1.</li> <li>On the Import page of the new Gramps Web instance, upload the media archive (ZIP).</li> <li>Go to Settings &gt; Administration &gt; Manage users of the new Gramps Web instance. Click the \"Import user accounts\" button and upload the JSON file downloaded in step 3.</li> </ol> <p>Note that, while your user accounts will be migrated, all your users will need to set new passwords by using the \"forgot password\" link, since passwords are stored in encrypted form and cannot be exported.</p>"},{"location":"administration/import/","title":"Import data","text":""},{"location":"administration/import/#prepare-your-gramps-database","title":"Prepare your Gramps database","text":"<p>If you are using Gramps Desktop, there are two steps to prepare your database to make sure everything will run smoothly in the following. If you are migrating from a different genealogy program, you can skip this step.</p> <ol> <li>Check and repair the database<ul> <li>Optional: create a database backup by exporting to Gramps XML</li> <li>Run the Check and repair database tool. This fixes some internal inconsistencies that could lead to problems in Gramps Web.</li> </ul> </li> <li>Convert media paths to relative<ul> <li>Use the Gramps Media Manager to convert all media paths from absolute to relative. Note that even with relative paths, any media files outside of your Gramps media directory will not work properly when synchronized with Gramps Web.</li> </ul> </li> </ol>"},{"location":"administration/import/#import-genealogical-data","title":"Import genealogical data","text":"<p>To import an existing family tree, use the \"Import\" page and upload a file in any of the file formats supported by Gramps \u2013 see Import from another genealogy program in the Gramps Wiki.</p> <p>If you already use Gramps Desktop, it is strongly recommended to use the Gramps XML (<code>.gramps</code>) format to ensure your online and offline trees use the same identifiers and can be synchronized.</p>"},{"location":"administration/import/#why-no-support-for-gramps-xml-package","title":"Why no support for Gramps XML package?","text":"<p>While Gramps XML (<code>.gramps</code>) is the preferred format for importing data, Gramps XML package (<code>.gpkg</code>) is not supported by Gramps Web. This is because the import and export routines for media files are not suited for use on a web server.</p> <p>To import the media files belonging to an imported <code>.gramps</code> file, see the next section.</p>"},{"location":"administration/import/#import-media-files","title":"Import media files","text":"<p>If you have uploaded a family tree and need to upload the corresponding media files, you can use the \"import media archive\" button on the \"Import\" page.</p> <p>It expects a ZIP file with the missing media files inside. The folder structure in the ZIP file does not have to be the same as the folder structure inside the Gramps media folder as the files are matched to media objects by their checksum.</p> <p>Note that this feature only works for files that have the correct checksum in the Gramps database (which should be ensured by running the check and repair tool in the first step).</p> <p>When moving to Gramps Web from a different genealogy program including media files, it is recommended to first import everything into Gramps Desktop, which has more options to associate existing media files with an imported tree.</p>"},{"location":"administration/owner/","title":"Create owner account","text":""},{"location":"administration/owner/#create-an-account-for-the-tree-owner","title":"Create an account for the tree owner","text":"<p>Before you can start using Gramps Web, you need to create an account for the tree owner. If no user account exists for a given tree, a form will be shown to create an account. The form depends on the server setup being for a single tree or for multiple trees.</p>"},{"location":"administration/owner/#single-tree-setup-create-admin-account","title":"Single-tree setup: create admin account","text":"<p>On a server with single-tree setup, when no user account exists yet, opening Gramps Web shows a form to create an admin account. The admin user will be both the owner of the (single) tree and the administrator of the installation. The form also allows setting the e-mail configuration needed for e-mail notifications (e.g. resetting a user password). If the e-mail configuration has already been added via a configuration file or environment variables on the server, this part of the form can be left empty.</p>"},{"location":"administration/owner/#multi-tree-setup-create-admin-account","title":"Multi-tree setup: create admin account","text":"<p>In a multi-tree setup, the same form to create an admin account will be shown if no users exists in any tree, i.e. when the server has just been created.</p>"},{"location":"administration/owner/#multi-tree-setup-create-tree-owner-account","title":"Multi-tree setup: create tree owner account","text":"<p>In a multi-tree setup, every user is tied to a single tree. Even if users already exist in other trees, a tree owner can be created in the web interface if no owner exists for this tree yet.</p> <p>However, the owner creation form will not be displayed automatically on the Gramps Web home page, which is the same for all trees. Instead, it can be reached at <code>https://my-gramps-instance/firstrun/my-tree-id</code>, where  <code>https://my-gramps-instance</code> is the base address of your Gramps Web installation, and <code>my-tree-id</code> is the ID of your tree.</p> <p>A possible workflow for a site administrator to create a new tree is to</p> <ul> <li>Create a tree via the REST API, obtaining the tree ID of the new tree</li> <li>Share the link to the owner creation form with the appropriate tree ID with the prospective tree owner</li> </ul> <p>The tree owner creation form is analogous to the admin creation form described above, except that it does not allow to change the e-mail configuration (which is only allowed for admins).</p>"},{"location":"administration/sync/","title":"Synchronize with Gramps","text":""},{"location":"administration/sync/#synchronize-gramps-web-and-gramps-desktop","title":"Synchronize Gramps Web and Gramps Desktop","text":"<p>Gramps Web Sync is an addon for Gramps that allows to synchronize your Gramps database on your desktop computer with Gramps Web, including media files.</p> <p>Warning</p> <p>As with any synchronization tool, please do not consider this as a backup tool. An accidental deletion on one side will be propagated to the other side. Make sure to create regular backups (in Gramps XML format) of your family tree.</p> <p>Info</p> <p>The documentation refers to the latest version of the Gramps Web Sync Addon. Please use the Gramps addon manager to update the addon to the latest version if needed.</p>"},{"location":"administration/sync/#installation","title":"Installation","text":"<p>The addon requires Gramps 6.0 running on Python 3.10 or newer. It is available in Gramps Desktop and can be installed in the usual way.</p> <p>Warn</p> <p>Please make sure to use the same version of Gramps on your desktop as the one running on your server. See the Get Help section for how to find out which Gramps version your server is running. The Gramps version has the form <code>MAJOR.MINOR.PATCH</code>, and <code>MAJOR</code> and <code>MINOR</code> must be the same on web and desktop.</p> <p>Optional step:</p> Gnome keyring bug <p>There is currently a bug in python keyring that affects many Gnome desktop configurations.  You may need to create the configuration file <code>~/.config/python_keyring/keyringrc.cfg</code> and edit it to look like this:</p> <pre><code>[backend]\ndefault-keyring=keyring.backends.SecretService.Keyring\n</code></pre> <ul> <li>Install <code>keyring</code> (e.g. <code>sudo apt install python3-keyring</code> or <code>sudo dnf install python3-keyring</code>) to allow storing the API password safely in your system's password manager </li> </ul>"},{"location":"administration/sync/#usage","title":"Usage","text":"<p>Once installed, the addon is availabe in Gramps under Tools &gt; Family Tree Processing &gt; Gramps\u00a0Web\u00a0Sync. Once started, and after confirming the dialog that the undo history will be discarded, a wizard will guide you through the synchronization steps. Note that no changes will be applied to your local tree or to the server until you explicitly confirm them.</p>"},{"location":"administration/sync/#step-1-enter-server-credentials","title":"Step 1: enter server credentials","text":"<p>The tool will ask you the base URL (example: <code>https://mygrampsweb.com/</code>) of your Gramps Web instance, your username, and password. You need an account with at least editor privileges to sync changes back to your remote database. The username and URL will be stored in plain text in your Gramps user directory, the password will only be stored if <code>keyring</code> is installed (see above).</p>"},{"location":"administration/sync/#step-2-review-changes","title":"Step 2: review changes","text":"<p>After confirming your credentials, the tool compares the local and remote databases and assesses if there are any differences. If there are, it displays a list of object changes (where an object can be a person, family, event, place, etc.) belonging to one of the following categories:</p> <ul> <li>added locally</li> <li>deleted locally</li> <li>modified locally</li> <li>added remotely </li> <li>deleted remotely</li> <li>modified remotely</li> <li>modified simultaneously (i.e., on both sides)</li> </ul> <p>The tool uses time stamps to assess which side is newer for each object (see \"Background\" below if you are interested in the details).</p> <p>If the changes look as expected, you can click \"Apply\" to apply the necessary changes to the local and the remote databases.</p> <p>Advanced: Sync mode</p> <p>Below the list of changes, you can select a synchronization mode.</p> <p>The default, bidirectional synchronization, means that it will apply changes to both sides (local and remote) by replicating the detected changes (objects added locally will be added on the remote side, etc.). Objects modified on both sides will be merged and updated on both sides as well.</p> <p>The option reset remote to local will instead ensure the remote Gramps database looks exactly like the local one. Any objects detected as \"added remotely\" will be deleted again, objects detected as \"deleted remotely\" will be added again\", etc. No changes will be applied to the local Gramps database.</p> <p>The option reset local to remote works in the opposite way and sets the local state to the one of the remote database. No changes will be applied to the remote database.</p> <p>Finally, the option merge is similar to biderectional synchronization in that it modifies both databases, but it does not delete any objects, but instead restores all objects deleted on only one side.</p>"},{"location":"administration/sync/#step-3-synchronize-media-files","title":"Step 3: synchronize media files","text":"<p>After the databases have been synchronized, the tool checks for any new or updated media files. If it finds any, it displays a list and asks for confirmation to upload/download the necessary files.</p> <p>Note the following limitations of the media file sync:</p> <ul> <li>If a local file has a different checksum from the one stored in the Gramps database (this can happen e.g. for Word files when edited after being added to Gramps), the upload will fail with an error message.</li> <li>The tool does not check integrity of all local files, so if a local file exist under the path stored for the media object, but the file is different from the file on the server, the tool will not detect it. Use the Media Verify Addon to detect files with incorrect checksums.</li> </ul>"},{"location":"administration/sync/#troubleshooting","title":"Troubleshooting","text":""},{"location":"administration/sync/#debug-logging","title":"Debug logging","text":"<p>If you are encountering issues with the Sync Addon, please start Gramps with debug logging enabled by starting Gramps from the command line with the following option:</p> <pre><code>gramps --debug grampswebsync\n</code></pre> <p>This will print many helpful logging statements to the command line that will help you identify the cause of the issue.</p>"},{"location":"administration/sync/#server-credentials","title":"Server credentials","text":"<p>If the first step already fails, please double-check the server URL, your username and password.</p>"},{"location":"administration/sync/#permissions-problems","title":"Permissions problems","text":"<p>If you encounter an error involving permissions, please check the user role of your Gramps Web user account. You can only apply changes to the remote database if you are a user with role editor, owner, or administrator.</p>"},{"location":"administration/sync/#unexpected-database-changes","title":"Unexpected database changes","text":"<p>If the sync tool detects changes that you think did not happen, it could be that there are inconsistencies in one of the databases that fool Gramps into detecting a difference, or that the time is out of sync between your local computer and your server.</p> <p>Please check that the clocks on both machines are correctly set (note, the time zone does not matter as the tool uses Unix timestamps, which are time zone agnostic).</p> <p>You can also run the check &amp; repair tool on your local database and see if this helps.</p> <p>A brute-force but effective method to ensure inconsistencies in your local database are not causing false positives is to export your database to Gramps XML and reimport it into a new, empty database. This is a lossless operation but makes sure all data is imported consistently.</p>"},{"location":"administration/sync/#timeout-errors","title":"Timeout errors","text":"<p>If you are experiencing timeout errors (e.g. indicated by a HTTP status 408 error or another error message including the word \"timeout\"), it is likely due to a large number of changes that need to be synchronized to the remote side in combination with your server setup.</p> <p>For versions of the sync addon earlier than v1.2.0 and versions of Gramps Web API earlier than  v2.7.0 (see the version info tab in Gramps Web), synchronization to the server side was processed in a single request that would time out, depending on the server configuration, after one to at most a few minutes. For large syncs (such as after importing thousands of objects in the local database or attempting to sync a full local database to an empty server side database), this can be too short.</p> <p>If you are using the sync addon v1.2.0 or later and Gramps Web API v2.7.0 or later, server-side synchronization is processed by a background worker and can run for very long (a progress bar will be displayed) and timeout errors should not occur.</p>"},{"location":"administration/sync/#unexpected-media-file-errors","title":"Unexpected media file errors","text":"<p>If uploading a media file fails, it is often caused by a mismatch in the checksum of the actual file on disk and the checksum in the local Gramps database. This often happens with editable files, like office documents, edited outside of Gramps. Please use the Gramps Media Verify Addon to correct the checksums of all media files.</p>"},{"location":"administration/sync/#ask-for-help","title":"Ask for help","text":"<p>If all the above does not help, you can ask the community for help by posting in the Gramps Web category of the Gramps forum. Please make sure to provide:</p> <ul> <li>the version of the Gramps Web Sync addon (and use the latest released version please)</li> <li>the version of Gramps desktop you are using</li> <li>the output of the Gramps debugging logging, enabled as described above</li> <li>the version info of Gramps Web (you can find it under Settings/Version info)</li> <li>any details you can provide about your Gramps Web installation (self-hosted, Grampshub, ...)</li> <li>the output of your Gramps Web server logs, if you have access to them (when using docker: <code>docker compose logs --tail 100 grampsweb</code> and <code>docker compose logs --tail 100 grampsweb-celery</code>)</li> </ul>"},{"location":"administration/sync/#background-how-the-addon-works","title":"Background: how the addon works","text":"<p>If you are curious about how the addon actually works, you can find some more detail in this section.</p> <p>The addon is meant to keep a local Gramps database in sync with a remote Gramps Web database, to allow both local and remote changes (collaborative editing).</p> <p>It is not suited</p> <ul> <li>To synchronize with a database that is not direct derivative (starting from a database copy or Gramps XML export/import) of the local database</li> <li>To merge two databases with a large number of changes on both sides that need manual attention for merging. Use the excellent Import Merge Tool for this purpose.</li> </ul> <p>The principles of operation of the tool are very simple:</p> <ul> <li>It compares the local and remote databases</li> <li>If there are any differences, it checks the timestamp of the latest identical object, let's call it t</li> <li>If an object changed more recently than t exists in one database but not the other, it is synced to both (assume new object)</li> <li>If an object changed the last time before t is absent in one database, it is deleted in both (assume deleted object)</li> <li>If an object is different but changed after t only in one database, sync to the other one (assume modified object)</li> <li>If an object is different but changed after t in both databases, merge them (assume conflicting modification)</li> </ul> <p>This algorithm is simple and robust as it does not require tracking synchronization history. However, it works best when you synchronize often.</p>"},{"location":"contribute/contribute/","title":"Contribute","text":""},{"location":"contribute/contribute/#how-to-contribute-to-gramps-web","title":"How to contribute to Gramps Web","text":"<p>Thanks for considering to contribute to Gramps Web! Depending on your skills and interests, there are many ways how you can help.</p>"},{"location":"contribute/contribute/#help-translating-gramps-web-to-your-language","title":"Help translating Gramps Web to your language","text":"<p>Gramps &amp; Gramps Web support several dozen different languages. Helping to translate the app does not require any programming skills. We use the powerful Weblate online tool for translations. Please see here for instructions on how to get started.</p>"},{"location":"contribute/contribute/#help-answering-other-users-questions","title":"Help answering other users' questions","text":"<p>If you are already using Gramps Web, help new users finding the answers to their questions by contributing to discussions in the Gramps Web category of the official Gramps Discourse forum.</p>"},{"location":"contribute/contribute/#help-improve-the-documentation","title":"Help improve the documentation","text":"<p>The documentation site you're looking at is hosted on Github. Contributions to improve it are highly welcome. Just submit a pull request to that repository.</p>"},{"location":"contribute/contribute/#contribute-to-backend-development-python","title":"Contribute to backend development (Python)","text":"<p>If you are a Python programmer, contribute to the development of the Gramps Web API, which is the backend powering Gramps Web. See Backend development for instructions on how to get started.</p>"},{"location":"contribute/contribute/#contribute-to-frontend-development-javascript","title":"Contribute to frontend development (Javascript)","text":"<p>If you are a web programmer, contribute to the development of Gramps Web's responsive frontend. See Frontend development for instructions on how to get started.</p>"},{"location":"contribute/contribute/#contribute-to-the-sync-addon-python","title":"Contribute to the Sync addon (Python)","text":"<p>If you have experience with developing with Python and GTK, contribute to the improvement of The Gramps Web Sync Addon. You can use the development repository for suggesting and submitting improvements.</p>"},{"location":"development/dev/","title":"Overview","text":""},{"location":"development/dev/#gramps-web-development-overview","title":"Gramps Web development: overview","text":"<p>Gramps Web is a web application that consists of two components that are developed separately:</p> <ul> <li>Gramps Web API is a RESTful API written in Python and based on Flask. The source code is hosted at github.com/gramps-project/gramps-web-api. It manages database access and genealogical functions directly leveraging the Gramps Python library. It serves as the backend of Gramps Web. For development documentation, see Backend.</li> <li>Gramps Web Frontend is a Javascript web application that serves as the frontend to Gramps Web. The source code is hosted at github.com/gramps-project/gramps-web. For development documentation, see Frontend.</li> </ul> <p>A note on versioning: Gramps Web API and and the Gramps Web frontend are versioned independently. At present, \"Gramps Web\" \u2013 the combined application \u2013 does not have a separate version number. Both projects adhere to SemVer.</p> <p>If you are not a Python or Javascript developer but would still like to contribute to Gramps Web, check out Contribute.</p>"},{"location":"development/backend/","title":"Introduction","text":""},{"location":"development/backend/#gramps-web-backend-development","title":"Gramps Web backend development","text":"<p>The backend of Gramps Web is called Gramps Web API. In fact it is more than just an app backend: it provides a RESTful API to read and modify a Gramps database.</p> <p>Gramps Web API is a Python application and is powered by the <code>gramps</code> library itself (which also powers the Gramps Desktop application).</p> <p>In this section of the docs, you can learn how to contribute to Gramps Web API development.</p>"},{"location":"development/backend/api/","title":"API specification","text":""},{"location":"development/backend/api/#api-specification","title":"API specification","text":"<p>The full API specification for the Gramps Web API can be found  at https://gramps-project.github.io/gramps-web-api/.</p>"},{"location":"development/backend/queries/","title":"Manual queries","text":"<p>For backend and frontend development, it can be useful to send manual queries to the Gramps Web API. Using HTTPie and jq, this can be done conveniently including JWT authentication.</p>"},{"location":"development/backend/queries/#installation","title":"Installation","text":"<p>HTTPie is installed with <code>pip</code>:</p> <pre><code>python3 -m pip install httpie\n</code></pre> <p>You will need HTTPie version 3.0.0 or newer.</p> <p>jq can be installed in Ubuntu via</p> <pre><code>sudo apt install jq\n</code></pre>"},{"location":"development/backend/queries/#fetching-an-access-token","title":"Fetching an access token","text":"<p>To fetch an access token, query the token endpoint. Assuming your development instance is running on <code>localhost:5555</code>, you can use the command</p> <pre><code>http POST http://localhost:5555/api/token/ username=owner password=owner\n</code></pre> <p>You will see the JSON tokens as output.</p> <p>Using jq, you can also store the access token in an environment variable:</p> <pre><code>export ACCESS_TOKEN=$(http POST http://localhost:5555/api/token/ \\\n  username=owner password=owner | jq -r '.access_token')\n</code></pre> <p>You can now use this token in all API calls that require authentication, e.g.</p> <pre><code>http -A bearer -a $ACCESS_TOKEN GET http://localhost:5555/api/metadata/\n</code></pre> <p>Note that, by default, access tokens will expire after 15 minutes.</p>"},{"location":"development/backend/setup/","title":"Development setup","text":""},{"location":"development/backend/setup/#backend-development-setup","title":"Backend development setup","text":"<p>This page lists the steps required to start developing Gramps Web API, the backend (server component) of Gramps Web.</p>"},{"location":"development/backend/setup/#prerequisites","title":"Prerequisites","text":"<p>The recommended development setup uses Visual Studio Code with devcontainers. This approach will create a preconfigured development environment with all the tools you need. To get started, you'll need the following ingredients:</p> <ul> <li>Docker</li> <li>Visual Studio Code with the Dev Containers extension installed</li> <li>Git</li> </ul> <p>You can use Linux, macOS, or Windows as your operating system.</p>"},{"location":"development/backend/setup/#getting-started","title":"Getting started","text":"<ol> <li>Open the Gramps Web API repository and click \"fork\"</li> <li>Clone your forked repository to your local machine using Git</li> <li>Open the cloned repository in Visual Studio Code. When prompted, select \"Reopen in Container\" or manually open the command palette (Ctrl+Shift+P or Cmd+Shift+P) and select \"Dev Containers: Rebuild and Reopen in Container\".</li> <li>Wait for the dev container to build and start. This may take a few minutes, especially the first time.</li> </ol>"},{"location":"development/backend/setup/#tasks","title":"Tasks","text":"<p>If you are only modifying the backend code, you do not necessarily need to spin up a web server - unit tests use a Flask test client that allow simulating requests to the API without needing a running server.</p> <p>However, running a server is useful if you</p> <ul> <li>want to try out your changes with real HTTP requests (see manual queries), </li> <li>want to preview the impact of changes on the full Gramps Web application, or</li> <li>also want to make simultaneous changes to the frontend (see frontend development setup).</li> </ul> <p>Running the server is simplified in the dev container by predefined tasks. You can run these tasks from the command palette (Ctrl+Shift+P or Cmd+Shift+P) by selecting \"Tasks: Run Task\" and then choosing one of the following: - \"Serve Web API\" - starts the Flask development server on port 5555 with debug logging enabled - \"Start Celery worker\" - starts a Celery worker to process background tasks.</p>"},{"location":"development/frontend/","title":"Introduction","text":""},{"location":"development/frontend/#gramps-web-frontend-development","title":"Gramps Web frontend development","text":"<p>The Gramps Web frontend is written in Javascript and built using web components with Lit. This allows encapsulating functionality into reusable components.</p> <p>The frontend is designed as a progressive single-page web app with a mobile-first experience. It makes heavy use of Material Web Components for a Material Design look and feel.</p>"},{"location":"development/frontend/architecture/","title":"Architecture","text":""},{"location":"development/frontend/architecture/#architecture","title":"Architecture","text":""},{"location":"development/frontend/architecture/#components","title":"Components","text":"<p>The frontend is built out of web components. They are defined in the Javascript files in the <code>src</code> directory.</p> <p>Typically, each file defines one component, starting with </p><pre><code>class GrampsjsSomeElement extends LitElement\n</code></pre> and ending with <pre><code>customElements.define('grampsjs-some-element', GrampsjsSomeElement)`\n</code></pre> that defines the new HTML element <code>grampsjs-some-element</code> that can be used elsewhere.<p></p> <p>The main entrypoint, included in <code>index.html</code> , is the <code>gramps-js</code> element defined in <code>GrampsJs.js</code>. This contains the definition of all individual pages (that correspond simply to elements that are shown or hidden based on the route/URL), the menu, and routing.</p> <p>The components in the <code>src/views</code> directory usually corresponds to full-page components that fetch data from the backend (e.g., the people list view), while components in <code>src/components</code> are usually smaller building blocks used inside the views that get their data from attributes provided by their parent element. However, this separation is not strict.</p>"},{"location":"development/frontend/architecture/#data-flow","title":"Data flow","text":"<p>Data is exchanged with the Backend/API via the <code>apiGet</code>, <code>apiPut</code>, and <code>apiPost</code> methods in <code>src/api.js</code>, which automatically take care of authentication.</p> <p>Data is passed from parent components to child components via properties (see e.g. the Lit documentation).</p> <p>When data needs to be fed back from a child to a parent component, custom events are used that can be fired with the <code>fireEvent</code> function in <code>src/api.js</code> and listened to using Lit's <code>@</code> syntax (docs).</p>"},{"location":"development/frontend/architecture/#authentication","title":"Authentication","text":"<p>The refresh token and authentication token are stored in the browser's local storage. Whenever an API call is made and the token is expired, the stored refresh token is used to fetch a new access token and the API call is repeated.</p> <p>The user's authorization scope, which is stored in the access token's claims, is obtained with the <code>getPermissions</code> function and used in the top-level <code>GrampsJs</code> element to set the boolean properties <code>canAdd</code>, <code>canEdit</code>, <code>canManageUsers</code>, which are flowed down to child elements to implement authorization-specific functionality.</p>"},{"location":"development/frontend/setup/","title":"Development setup","text":""},{"location":"development/frontend/setup/#frontend-development-setup","title":"Frontend development setup","text":"<p>This page describes the steps needed to start with frontend development. </p>"},{"location":"development/frontend/setup/#prerequisites","title":"Prerequisites","text":"<p>The recommended development setup uses Visual Studio Code with devcontainers. This approach will create a preconfigured development environment with all the tools you need.</p> <p>See Backend development setup for the prerequisites needed.</p>"},{"location":"development/frontend/setup/#getting-started","title":"Getting started","text":"<ol> <li>Open the Gramps Web frontend repository and click \"fork\"</li> <li>Clone your forked repository to your local machine using Git</li> <li>Open the cloned repository in Visual Studio Code. When prompted, select \"Reopen in Container\" or manually open the command palette (Ctrl+Shift+P or Cmd+Shift+P) and select \"Dev Containers: Rebuild and Reopen in Container\".</li> <li>Wait for the dev container to build and start. This may take a few minutes, especially the first time.</li> </ol>"},{"location":"development/frontend/setup/#running-the-frontend-development-server","title":"Running the frontend development server","text":"<p>To run the frontend development server and preview the impact of your changes in the browser, you can use the predefined tasks in the dev container.</p> <p>For that to work, you first need to spin up an instance of the Gramps Web API backend. The easiest way to do this is to use the backend dev container and run the \"Serve Web API\" task in a separate VS Code window.</p> <p>Once the backend is running, you can run the frontend development server by selecting \"Tasks: Run Task\" from the command palette (Ctrl+Shift+P or Cmd+Shift+P) and then choosing \"Serve Gramps Web frontend\".</p> <p>This will start the frontend development server on port 8001, which you can access in your browser at <code>http://localhost:8001</code>. The browser will automatically reload when you make changes to the frontend code, allowing you to see the impact of your changes immediately.</p>"},{"location":"development/frontend/translation/","title":"Translation","text":"<p>Gramps Web leverages the translations of Gramps Desktop provided by the community for over 40 languages. The additional strings that only needed for the Web app are translated via Weblate.</p> <p>To contribute, follow the instructions in the Gramps Wiki to get started with Weblate for Gramps. Once authenticated, you can start translating strings both for Gramps Desktop and Gramps Web.</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#features","title":"Features","text":""},{"location":"features/#full-integration-with-gramps-desktop","title":"Full integration with Gramps Desktop","text":"<p>Gramps Web uses the same Model / Database structure that Gramps Desktop uses for storing genalogical data.  You can browse all the same Record Types you do in Gramps Desktops: people, families, events, places, repositories, sources, citations, media objects, and notes.</p> <p>Using the Gramps Web Sync Add-on for Gramps Desktop, data can be synchronized bi-directionally between Gramps Web and Gramps Desktop! Go ahead and edit your data with Gramps Web or the Gramps Desktop App which you know and love - they work together seamlessly!</p> <p></p>"},{"location":"features/#privacy-levels-user-access","title":"Privacy Levels / User Access","text":"<p>Many folks want to keep some details private and we respect that!  You can mark Records as Private and control which users are allowed to view private records. Private records are filtered out at the database layer for maximum security.  In addition, you can control what users are able to add and edit. </p> <p></p>"},{"location":"features/#web-browser-convenience","title":"Web Browser Convenience","text":"<p>Access Gramps Web from any web-enabled Device.  You can upload photos, create or edit Records, show your Family Tree to others, or look up those Family member names you can't remember at your next Family Reunion!</p> <p></p>"},{"location":"features/#interactive-family-tree-graphs","title":"Interactive family tree graphs","text":"<p>Navigate your family tree as an ancestor chart, descendant chart, hourglass chart, or as fan chart, with high-quality interactive graphics and configurable number of generations.</p> <p></p>"},{"location":"features/#powerful-map","title":"Powerful map","text":"<p>Display all places on an interactive, searchable map.</p> <p>Turn a historical map stored as media object in Gramps into a custom map overlay.</p> <p></p>"},{"location":"features/#genealogy-blog-included","title":"Genealogy Blog included","text":"<p>Summarize your research in the form of blog stories with pictures. All data is stored in the Gramps database.</p> <p></p>"},{"location":"features/#fully-internationalized","title":"Fully internationalized","text":"<p>Switch the language of the interface between any of 40 languages translated by the Gramps community.</p> <p></p>"},{"location":"features/#no-lock-in-data-import-and-export","title":"No lock-in \u2013 data import and export","text":"<p>Apart from being able to import data in various formats including Gramps XML and GEDCOM, Gramps Web makes it easy for users to download all of their data (family tree data, media files, user accounts) anytime, for backup purposes or to move to a different server. Your data is yours alone!</p> <p></p>"},{"location":"features/#generate-printable-reports","title":"Generate printable reports","text":"<p>Since it's built directly on the core powering Gramps Desktop, you can generate almost all of the reports the desktop app supports right from the browser, including relationship graphs or book reports as PDF.</p> <p></p>"},{"location":"features/#tag-people-in-photos-with-automated-face-detection","title":"Tag people in photos with automated face detection","text":"<p>Collaborate with your relatives to identify ancestors in old family photos. Thanks to automated face detection, tagging people is just two clicks away.</p> <p></p>"},{"location":"features/#powerful-full-text-search","title":"Powerful full-text search","text":"<p>The search engine supports searching all Gramps object types, including the content of text notes, and supports wildcard syntax and logical operators.</p> <p></p>"},{"location":"features/#dna-matches-chromosome-browser","title":"DNA matches &amp; chromosome browser","text":"<p>If you have DNA match data from one of the DNA genealogy providers, upload it and store it in a future-proof way and view your matches in an interactive chromosome browser.</p> <p></p>"},{"location":"features/#integrated-task-management-app","title":"Integrated task management app","text":"<p>Gramps Web comes with an integrated task management app to organize and plan your genealogical research. The tasks are stored as sources in the Gramps database, so they form part of your genealogical data an can be accessed and edited in Gramps Desktop as well.</p> <p></p>"},{"location":"features/#integration-of-openhistoricalmap","title":"Integration of OpenHistoricalMap","text":"<p>The historical vector maps created by the OpenHistoricalMap project are the perfect complement to genealogical mapping. Use the time slider to scroll through the evolution of the places in your family history and display the places where ancestors lived or events happened.</p> <p></p>"},{"location":"features/#integrated-ai-chat-assistant","title":"Integrated AI chat assistant","text":"<p>Powered by AI, Gramps Web allows you to chat with your family tree \u2013 in your native language!</p> <p> </p>"},{"location":"features/#demo","title":"Demo","text":"<p>To login to the Demo, use any one of the following USER / PASS login credentials.  Each represent a user type that a Gramps Web user may be assigned to.</p> <p><code>owner / owner</code> <code>editor / editor</code> <code>contributor / contributor</code> <code>member / member</code></p> <p>Go to Demo Login</p>"},{"location":"features/#thanks","title":"Thanks","text":"<p>The demo is kindly supported by DigitalOcean.</p> <p></p>"},{"location":"help/help/","title":"Get Help","text":"<p>If you run into issues or need help with Gramps Web, please pick one of the following options.</p> <p>Forum  Backend issues  Frontend issues </p> <p>See below for some guidance on where to head first.</p>"},{"location":"help/help/#asking-questions","title":"Asking questions","text":"<p>The official Gramps Discourse forum has a separate category for Gramps Web. Please use it to ask any questions you may have about Gramps Web, for instance</p> <ul> <li>Questions on the usage of Gramps Web</li> <li>Questions on the configuration of Gramps Web</li> <li>Troubleshooting a deployment of Gramps Web</li> <li>Ideas about improvements to Gramps Web</li> <li>...</li> </ul>"},{"location":"help/help/#reporting-issues","title":"Reporting issues","text":"<p>If you encounter a problem that you believe is a bug in Gramps Web, please support it via Github.</p> <p>There are two separate Github repositories for the code used in Gramps Web, one for the user interface (\u201cfrontend\u201d) and one for the server code (\u201cbackend\u201d):</p> <ul> <li>Frontend issues</li> <li>Backend issues</li> </ul> <p>If you are unsure where to file an issue, don't worry and just choose either of the two \u2013 the maintainers will be able to transfer the issue if necessary.</p> <p>In either case, please always include the following information in your report:</p> <ul> <li>Details about your setup (e.g. a docker-compose file with sensitive values redacted, or whether your are using a hosted version, such as Grampshub, or a pre-configured image, such as DigitalOcean)</li> <li>Version information. To obtain it, go to the \"System information\" tab on the Settings page in Gramps Web and copy/paste the values in the box, which should look something like this:</li> </ul> <pre><code>Gramps 5.1.6\nGramps Web API 1.5.1\nGramps.js 24.1.0\nlocale: en\nmulti-tree: false\ntask queue: true\n</code></pre>"},{"location":"help/help/#suggesting-enhancements","title":"Suggesting enhancements","text":"<p>For general ideas and discussion about future improvements, feel free to open a discussion in the forum. You may also want to check the issue pages (see links above) whether a particular feature is already planned or being worked on.</p> <p>For specific enhancements with a limited scope, feel free to directly open an issue with a feature request in the appropriate frontend or backend Github repository.</p>"},{"location":"install_setup/chat/","title":"Setting up AI chat","text":""},{"location":"install_setup/chat/#setting-up-ai-chat","title":"Setting up AI chat","text":"<p>Info</p> <p>AI chat requires Gramps Web API version 2.5.0 or higher.</p> <p>Gramps Web API supports asking questions about the genealogical database using large language models (LLM) via a technique called retrieval-augmented generation (RAG).</p> <p>RAG works as follows. First, a vector embedding model is used to create an index of all objects in the Gramps database in the form of numerical vectors that encode the objects' meaning. This process is similar to the creation of the full-text search index, but more computationally expensive.</p> <p>Next, when a user asks a question via the chat endpoint, that question is converted to a vector as well, by the same embedding model,  and compared the objects in the Gramps database. This semantic search will return objects in the database that are most semantically similar to the question.</p> <p>In the final step, the question and the retrieved objects are sent to an LLM to formulate an answer based on the provided information. In this way, the chatbot has access to detailed information about the contents of the genealogical database instead of relying solely on pre-existing knowledge.</p> <p>To enable the chat endpoint in Gramps Web API, three steps are necessary:</p> <ol> <li>Installing required dependencies,</li> <li>Enabling semantic search,</li> <li>Setting up an LLM provider.</li> </ol> <p>The three step are described below in turn. Finally, an owner or administrator must configure which users can access the chat feature in the Manage Users settings.</p>"},{"location":"install_setup/chat/#installing-required-dependencies","title":"Installing required dependencies","text":"<p>AI chat requires the Sentence Transformers and PyTorch libraries to be installed.</p> <p>The standard docker images for Gramps Web already have them pre-installed for the <code>amd64</code> (e.g. 64-bit desktop PC) and <code>arm64</code> (e.g. 64-bit Raspberry Pi) architectures. Unfortunately, AI chat is not supported on the <code>armv7</code> (e.g. 32-bit Raspberry Pi) architecture due to the lack of PyTorch support.</p> <p>When installing Gramps Web API via <code>pip</code> (this is not necessary when using the Docker images) the necessary dependencies are installed with</p> <pre><code>pip install gramps_webapi[ai]\n</code></pre>"},{"location":"install_setup/chat/#enabling-semantic-search","title":"Enabling semantic search","text":"<p>If the necessary dependencies are installed, enabling semantic search can be as simple as setting the <code>VECTOR_EMBEDDING_MODEL</code> configuration option (e.g. by setting the <code>GRAMPSWEB_VECTOR_EMBEDDING_MODEL</code> environment variable), see Server Configuration. This can be any string of a model supported by the Sentence Transformers library. See the documentation of this project for details and the available models.</p> <p>Warning</p> <p>Note that the default docker images do not include a PyTorch version with GPU support. If you have access to a GPU (which will speed up the semantic indexing significantly), please install a GPU-enabled version of PyTorch.</p> <p>There are several considerations to make when choosing a model.</p> <ul> <li>When you change the model, you have to manually recreate the semantic search index for your tree (or all trees in a multi-tree setup), otherwise you will encounter errors or meaningless results.</li> <li>The models are a tradeoff between accuracy/generality on the one hand and computational time/storage space on the other. If you aren't running Gramps Web API on a system that has access to a powerful GPU, bigger models are usually too slow in practice.</li> <li>Unless your entire database is in English and all your users are only expected to ask chat questions in English, you will need a multilingual embedding model, which are more rare than pure English models.</li> </ul> <p>If the model is not present in the local cache, it will be downloaded when Gramps Web API is started for the first time with the new configuration. The model <code>sentence-transformers/distiluse-base-multilingual-cased-v2</code> is already available locally when using the standard docker images. This model is a good starting point and supports multilingual input.</p> <p>Please share learnings about different models with the community!</p> <p>Info</p> <p>The sentence transformers library consumes a significant amount of memory, which might cause worker processes being killed. As a rule of thumb, with semantic search enabled, each Gunicorn worker consumes around 200 MB of memory and each celery worker around 500 MB of memory even when idle, and up to 1 GB when computing embeddings. See Limit CPU and memory usage for settings that limit memory usage. In addition, it is advisable to provision a sufficiently large swap partition to prevent OOM errors due to transient memory usage spikes.</p>"},{"location":"install_setup/chat/#setting-up-an-llm-provider","title":"Setting up an LLM provider","text":"<p>Communication with the LLM uses an OpenAI compatible API using the <code>openai-python</code> library. This allows using a locally deployed LLM via Ollama (see Ollama OpenAI compatibility) or an API like OpenAI or Hugging Face TGI (Text Generation Inference). The LLM is configured via the configuration parameters <code>LLM_MODEL</code> and <code>LLM_BASE_URL</code>.</p>"},{"location":"install_setup/chat/#using-a-hosted-llm-via-the-openai-api","title":"Using a hosted LLM via the OpenAI API","text":"<p>When using the OpenAI API, <code>LLM_BASE_URL</code> can be left unset, while <code>LLM_MODEL</code> has to be set to one of the OpenAI models, e.g. <code>gpt-4o-mini</code>. Note that, due to the RAG approach, the LLM is \"only\" used to select the right information from the semantic search results and formulate an answer, it does not require deep genealogical or historical knowledge. Therefore, you can try if a small/cheap model is sufficient.</p> <p>You will also need to sign up for an account, get an API key and store it in the <code>OPENAI_API_KEY</code> environment variable.</p> <p>Info</p> <p><code>LLM_MODEL</code> is a configuration parameter; if you want to set it via an environment variable, use <code>GRAMPSWEB_LLM_MODEL</code> (see Configuration). <code>OPENAI_API_KEY</code> is not a configuration parameter but an environment variable directly used by the <code>openai-python</code> library, so it should not be prefixed.</p>"},{"location":"install_setup/chat/#using-a-local-llm-via-ollama","title":"Using a local LLM via Ollama","text":"<p>Ollama is a convenient way to run LLMs locally. Please consult the Ollama documentation for details. Please note that LLMs require significant computational resources and all but the smallest models will probably be too slow without GPU support. You can try whether <code>tinyllama</code> meets you needs. If not, try one of the larger models. Please share any experience with the community!</p> <p>When deploying Gramps Web with Docker Compose, you can add an Ollama service</p> <pre><code>services:\n  ollama:\n    image: ollama/ollama\n    container_name: ollama\n    ports:\n      - \"11434:11434\"\n    volumes:\n      - ollama_data:/root/.ollama\n\nvolumes:\n    ollama_data:\n</code></pre> <p>and then set the <code>LLM_BASE_URL</code> configuration parameter to <code>http://ollama:11434/v1</code>. Set <code>LLM_MODEL</code> to a model supported by Ollama, and pull it down in your container with <code>ollama pull &lt;model&gt;</code>.  Finally, set <code>OPENAI_API_KEY</code> to <code>ollama</code>.</p> <p>To troubleshoot problems with Ollama, you can enable debug logging by setting environment variable <code>OLLAMA_DEBUG=1</code> in the Ollama service environment.</p> <p>Info</p> <p>If you are using Ollama for Gramps Web AI chat, please support the community by completing this documentation with any missing details.</p>"},{"location":"install_setup/chat/#using-other-providers","title":"Using other providers","text":"<p>Please feel free to submit documentation for other providers and share your experience with the community!</p>"},{"location":"install_setup/configuration/","title":"Server configuration","text":""},{"location":"install_setup/configuration/#server-configuration","title":"Server Configuration","text":"<p>Using the default Docker image, all necessary configuration can be made from the browser. However, depending on the deployment, it can be necessary to customize the server configuration.</p> <p>This page lists all methods to change the configuration and all existing configuration options.</p>"},{"location":"install_setup/configuration/#configuration-file-vs-environment-variables","title":"Configuration file vs. environment variables","text":"<p>For the settings, you can either use a configuration file or environment variables.</p> <p>When you use the Docker Compose based setup, you can include a configuration file by adding the following list item under the <code>volumes:</code> key in the <code>grampsweb:</code> block:</p> <p></p><pre><code>      - /path/to/config.cfg:/app/config/config.cfg\n</code></pre> where <code>/path/to/config.cfg</code> is the path to the config file in your server's file system (the right-hand side refers to the path in the container and must not be changed).<p></p> <p>When using environment variables,</p> <ul> <li>prefix every setting name with <code>GRAMPSWEB_</code> to obtain the name of the environment variable</li> <li>Use double underscores for nested dictionary settings, e.g <code>GRAMPSWEB_THUMBNAIL_CACHE_CONFIG__CACHE_DEFAULT_TIMEOUT</code> will set the value of the <code>THUMBNAIL_CACHE_CONFIG['CACHE_DEFAULT_TIMEOUT']</code> config option</li> </ul> <p>Note that configuration options set via the environment take precedence over the ones in the configuration file. If both are present, the environment variable \"wins\".</p>"},{"location":"install_setup/configuration/#existing-configuration-settings","title":"Existing configuration settings","text":"<p>The following configuration options exist.</p>"},{"location":"install_setup/configuration/#required-settings","title":"Required settings","text":"Key Description <code>TREE</code> The name of the family tree database to use. Show available trees with <code>gramps -l</code>. If a tree with this name does not exist, a new empty one will be created. <code>SECRET_KEY</code> The secret key for flask. The secret must not be shared publicly. Changing it will invalidate all access tokens. <code>USER_DB_URI</code> The database URL of the user database. Any URL compatible with SQLAlchemy is allowed. <p>Info</p> <p>You can generate a secure secret key e.g. with the command</p> <pre><code>python3 -c \"import secrets;print(secrets.token_urlsafe(32))\"\n</code></pre>"},{"location":"install_setup/configuration/#optional-settings","title":"Optional settings","text":"Key Description <code>MEDIA_BASE_DIR</code> Path to use as base directory for media files, overriding the media base directory set in Gramps. When using S3, must have the form <code>s3://&lt;bucket_name&gt;</code> <code>SEARCH_INDEX_DB_URI</code> Database URL for the search index. Only <code>sqlite</code> or <code>postgresql</code> are allowed as backends. Defaults to <code>sqlite:///indexdir/search_index.db</code>, creating an SQLite file in the folder <code>indexdir</code> relative to the path where the script is run <code>STATIC_PATH</code> Path to serve static files from (e.g. a static web frontend) <code>BASE_URL</code> Base URL where the API can be reached (e.g. <code>https://mygramps.mydomain.com/</code>). This is necessary e.g. to build correct password reset links <code>CORS_ORIGINS</code> Origins where CORS requests are allowed from. By default, all are disallowed. Use <code>\"*\"</code> to allow requests from any domain. <code>EMAIL_HOST</code> SMTP server host (e.g. for sending password reset e-mails) <code>EMAIL_PORT</code> SMTP server port. defaults to 465 <code>EMAIL_HOST_USER</code> SMTP server username <code>EMAIL_HOST_PASSWORD</code> SMTP server password <code>EMAIL_USE_TLS</code> Boolean, whether to use TLS for sending e-mails. Defaults to <code>True</code>. When using STARTTLS, set this to <code>False</code> and use a port different from 25. <code>DEFAULT_FROM_EMAIL</code> \"From\" address for automated e-mails <code>THUMBNAIL_CACHE_CONFIG</code> Dictionary with settings for the thumbnail cache. See Flask-Caching for possible settings. <code>REQUEST_CACHE_CONFIG</code> Dictionary with settings for the request cache. See Flask-Caching for possible settings. <code>PERSISTENT_CACHE_CONFIG</code> Dictionary with settings for the persistent cache, used e.g. for telemetry. See Flask-Caching for possible settings. <code>CELERY_CONFIG</code> Settings for the Celery background task queue. See Celery for possible settings. <code>REPORT_DIR</code> Temporary directory where the output of running Gramps reports will be stored <code>EXPORT_DIR</code> Temporary directory where the output of exporting the Gramps database will be stored <code>REGISTRATION_DISABLED</code> If <code>True</code>, disallow new user registration (default <code>False</code>) <code>DISABLE_TELEMETRY</code> If <code>True</code>, disable statistics telemetry (default <code>False</code>). See telemetry for details. <p>Info</p> <p>When using environment variables for configuration, boolean options like <code>EMAIL_USE_TLS</code> must be either the string <code>true</code> or <code>false</code> (case sensitive!).</p>"},{"location":"install_setup/configuration/#settings-only-for-postgresql-backend-database","title":"Settings only for PostgreSQL backend database","text":"<p>This is required if you've configured your Gramps database to work with the PostgreSQL addon.</p> Key Description <code>POSTGRES_USER</code> The user name for the database connection <code>POSTGRES_PASSWORD</code> The password for the database user"},{"location":"install_setup/configuration/#settings-relevant-for-hosting-multiple-trees","title":"Settings relevant for hosting multiple trees","text":"<p>The following settings are relevant when hosting multiple trees.</p> Key Description <code>MEDIA_PREFIX_TREE</code> Boolean, whether or not to use a separate subfolder for the media files of each tree. Defaults to <code>False</code>, but strongly recommend to use <code>True</code> in a multi-tree setup <code>NEW_DB_BACKEND</code> The database backend to use for newly created family trees. Must be one of <code>sqlite</code>, <code>postgresql</code>, or <code>sharedpostgresql</code>. Defaults to <code>sqlite</code>. <code>POSTGRES_HOST</code> The host name of the PostgreSQL server used for creating new trees when using a multi-tree setup with the SharedPostgreSQL backend <code>POSTGRES_PORT</code> The port of the PostgreSQL server used for creating new trees when using a multi-tree setup with the SharedPostgreSQL backend"},{"location":"install_setup/configuration/#settings-for-oidc-authentication","title":"Settings for OIDC authentication","text":"<p>These settings are needed if you want to use OpenID Connect (OIDC) authentication with external providers. For detailed setup instructions and examples, see OIDC Authentication.</p> Key Description <code>OIDC_ENABLED</code> Boolean, whether to enable OIDC authentication. Defaults to <code>False</code>. <code>OIDC_ISSUER</code> OIDC provider issuer URL (for custom OIDC providers) <code>OIDC_CLIENT_ID</code> OAuth client ID (for custom OIDC providers) <code>OIDC_CLIENT_SECRET</code> OAuth client secret (for custom OIDC providers) <code>OIDC_NAME</code> Custom display name for the provider. Defaults to \"OIDC\" <code>OIDC_SCOPES</code> OAuth scopes. Defaults to \"openid email profile\" <code>OIDC_USERNAME_CLAIM</code> The claim to use for the username. Defaults to \"preferred_username\" <code>OIDC_OPENID_CONFIG_URL</code> Optional: URL to the OpenID Connect configuration endpoint (if not using standard <code>/.well-known/openid-configuration</code>) <code>OIDC_DISABLE_LOCAL_AUTH</code> Boolean, whether to disable local username/password authentication. Defaults to <code>False</code> <code>OIDC_AUTO_REDIRECT</code> Boolean, whether to automatically redirect to OIDC when only one provider is configured. Defaults to <code>False</code>"},{"location":"install_setup/configuration/#built-in-oidc-providers","title":"Built-in OIDC providers","text":"<p>For built-in providers (Google, Microsoft, GitHub), use these settings:</p> Key Description <code>OIDC_GOOGLE_CLIENT_ID</code> Client ID for Google OAuth <code>OIDC_GOOGLE_CLIENT_SECRET</code> Client secret for Google OAuth <code>OIDC_MICROSOFT_CLIENT_ID</code> Client ID for Microsoft OAuth <code>OIDC_MICROSOFT_CLIENT_SECRET</code> Client secret for Microsoft OAuth <code>OIDC_GITHUB_CLIENT_ID</code> Client ID for GitHub OAuth <code>OIDC_GITHUB_CLIENT_SECRET</code> Client secret for GitHub OAuth"},{"location":"install_setup/configuration/#oidc-role-mapping","title":"OIDC Role Mapping","text":"<p>These settings allow you to map OIDC groups/roles from your identity provider to Gramps Web user roles:</p> Key Description <code>OIDC_ROLE_CLAIM</code> The claim name in the OIDC token that contains the user's groups/roles. Defaults to \"groups\" <code>OIDC_GROUP_ADMIN</code> The group/role name from your OIDC provider that maps to the Gramps \"Admin\" role <code>OIDC_GROUP_OWNER</code> The group/role name from your OIDC provider that maps to the Gramps \"Owner\" role <code>OIDC_GROUP_EDITOR</code> The group/role name from your OIDC provider that maps to the Gramps \"Editor\" role <code>OIDC_GROUP_CONTRIBUTOR</code> The group/role name from your OIDC provider that maps to the Gramps \"Contributor\" role <code>OIDC_GROUP_MEMBER</code> The group/role name from your OIDC provider that maps to the Gramps \"Member\" role <code>OIDC_GROUP_GUEST</code> The group/role name from your OIDC provider that maps to the Gramps \"Guest\" role"},{"location":"install_setup/configuration/#settings-only-for-ai-features","title":"Settings only for AI features","text":"<p>These settings are needed if you want to use AI-powered features like chat or semantic search.</p> Key Description <code>LLM_BASE_URL</code> Base URL for the OpenAI-compatible chat API. Defaults to <code>None</code>, which uses the OpenAI API. <code>LLM_MODEL</code> The model to use for the OpenAI-compatible chat API. If unset (the default), chat is disabled. <code>VECTOR_EMBEDDING_MODEL</code> The Sentence Transformers model to use for semantic search vector embeddings. If unset (the default), semantic search and chat are disabled. <code>LLM_MAX_CONTEXT_LENGTH</code> Character limit for the family tree context provided to the LLM. Defaults to 50000."},{"location":"install_setup/configuration/#example-configuration-file","title":"Example configuration file","text":"<p>A minimal configuration file for production could look like this: </p><pre><code>TREE=\"My Family Tree\"\nBASE_URL=\"https://mytree.example.com\"\nSECRET_KEY=\"...\"  # your secret key\nUSER_DB_URI=\"sqlite:////path/to/users.sqlite\"\nEMAIL_HOST=\"mail.example.com\"\nEMAIL_PORT=465\nEMAIL_USE_TLS=True\nEMAIL_HOST_USER=\"gramps@example.com\"\nEMAIL_HOST_PASSWORD=\"...\" # your SMTP password\nDEFAULT_FROM_EMAIL=\"gramps@example.com\"\n</code></pre><p></p>"},{"location":"install_setup/cpu-limited/","title":"Limit CPU & memory usage","text":""},{"location":"install_setup/cpu-limited/#limit-cpu-and-memory-usage","title":"Limit CPU and memory usage","text":"<p>In the recommended docker-based setup, Gramps Web uses Gunicorn to serve the backend and Celery for background tasks. In both cases, several worker processes can be run in parallel, which makes the application more responsive from a user perspective. However, increasing the number of workers also increase the amount of RAM used (even when the application is idle) and allowing requests to be processed in parallel can lead to high CPU usage (in particular when many users are using the application simultaneously). Both Gunicorn and Celery allow to limit the number of parallel workers.</p>"},{"location":"install_setup/cpu-limited/#get-information-about-your-system","title":"Get information about your system","text":"<p>On Linux, you can check the number of cores available on your system with the following command:</p> <pre><code>lscpu | grep CPU\n</code></pre> <p>To see how much memory and swap space you have available, use</p> <pre><code>free -h\n</code></pre>"},{"location":"install_setup/cpu-limited/#limiting-the-number-of-gunicorn-workers","title":"Limiting the number of Gunicorn workers","text":"<p>The easiest way to set the number of Gunicorn workers when using the default Gramps Web docker image is to set the environment variable <code>GUNICORN_NUM_WORKERS</code>, e.g. by declaring it in the <code>docker-compose.yml</code> file, under the \"environment\".</p> <pre><code>services:\n  grampsweb:\n    environment:\n      GUNICORN_NUM_WORKERS: 2\n</code></pre> <p>See the Gunicorn documentation to decide about the ideal number of workers.</p>"},{"location":"install_setup/cpu-limited/#limiting-the-number-of-celery-workers","title":"Limiting the number of Celery workers","text":"<p>To set the number of Celery workers, adapt the <code>concurrency</code> setting in the Docker compose file:</p> <pre><code>  grampsweb_celery:\n    command: celery -A gramps_webapi.celery worker --loglevel=INFO --concurrency=2\n</code></pre> <p>See the Celery documentation to decide about the ideal number of workers.</p> <p>Info</p> <p>If the <code>concurrency</code> flag is omitted (which was the case in the Gramps Web documentation until v2.5.0), it defaults to the number of CPU cores available on the system, which might consume a substantial amount of memory.</p>"},{"location":"install_setup/deployment/","title":"Deploy with Docker","text":""},{"location":"install_setup/deployment/#deploying-gramps-web-with-docker","title":"Deploying Gramps Web with Docker","text":"<p>The most convenient option to host Gramps Web on your own server (or virtual server) is with Docker Compose.</p> <p>We will assume that Docker and Docker Compose are already installed in your system. You can use Windows, Mac OS, or Linux as a host system. The supported architectures include not only x86-64 (desktop systems), but also ARM systems such as a Raspberry Pi, which can serve as a low-cost, but powerful (enough) web server.</p> <p>Note</p> <p>You do not need to install Gramps on the server as it is contained in the docker image.</p>"},{"location":"install_setup/deployment/#step-1-docker-configuration","title":"Step 1: Docker configuration","text":"<p>Create a new file on the server named <code>docker-compose.yml</code> and insert the following contents: docker-compose.yml.</p> <p>This will generate six named volumes to make sure that all relevant data will persist when restarting the container.</p> <p>Warning</p> <p>The above will make the API available on port 80 of the host machine without SSL/TLS protection. You can use this for local testing, but do not expose this directly to the internet, it is completely insecure!</p>"},{"location":"install_setup/deployment/#step-2-secure-access-with-ssltls","title":"Step 2: Secure access with SSL/TLS","text":"<p>The web API must be served to the public internet over HTTPS. There are several options, e.g.</p> <ul> <li>Using docker hosting that includes SSL/TLS automatically</li> <li>Using an Nginx Reverse Proxy with a Let's Encrypt certificate</li> </ul> <p>See Docker with Let's Encrypt for how to set up the former.</p> <p>If you plan to use Gramps Web only on your local network, you can skip this step.</p>"},{"location":"install_setup/deployment/#step-3-start-the-server","title":"Step 3: Start the server","text":"<p>Run</p> <pre><code>docker compose up -d\n</code></pre> <p>On first run, the app will display a first-run wizard that will allow you to</p> <ul> <li>Create and account for the owner (admin) user</li> <li>Set some necessary configuration options</li> <li>Import a family tree in Gramps XML (<code>.gramps</code>) format</li> </ul>"},{"location":"install_setup/deployment/#step-4-upload-media-files","title":"Step 4: Upload media files","text":"<p>There are several options for uploading media files.</p> <ul> <li>When using files stored on the same server as Gramps Web, you can mount a directory into the Docker container instead of using a named volume, i.e. <code>/home/server_user/gramps_media/:/app/media</code>instead of <code>gramps_media:/app/media</code>, and upload your media files there.</li> <li>When using media files hosted on S3, you can use he S3 Media Uploader Addon</li> <li>The arguably most convenient option is to use Gramps Web Sync.</li> </ul>"},{"location":"install_setup/digital_ocean/","title":"DigitalOcean","text":""},{"location":"install_setup/digital_ocean/#gramps-web-digitalocean-1-click-app","title":"Gramps Web DigitalOcean 1-Click App","text":"<p>Instead of setting up Gramps Web yourself, you can also use the Gramps Web DigitalOcean 1-Click App.  Digital Ocean hosts the Demo version of Gramps Web.</p> <p></p> <p>As part of the setup procedure, you will have to sign up for an account with DigitalOcean and select a paid plan for the \"droplet\" (virtual machine) to use.</p> <p>Arguably, this is currently the simplest way to deploy your own, self-hosted Gramps Web instance, secured with SSL, without using your own hardware.</p> <p>Info</p> <p>Note that you will be paying DigitalOcean for the hosting services. The Gramps open source project does not provide paid support.</p>"},{"location":"install_setup/digital_ocean/#step-1-create-a-digitalocean-account","title":"Step 1: Create a DigitalOcean account","text":"<p>Create an account at DigitalOcean if you don't have one yet.</p>"},{"location":"install_setup/digital_ocean/#step-2-create-the-droplet","title":"Step 2: Create the droplet","text":"<ul> <li>Go to Gramps Web 1-Click App and click \"Create Gramps Web Droplet\".</li> <li>Choose a plan with at least 2 GB of RAM.</li> <li>Set up authentication to your droplet</li> <li>Click \"Create Droplet\"</li> </ul> <p>Info</p> <p>You may need to wait up to ten minutes for the 1-Click App to install the latest <code>docker-compose</code> version. Using the latest version of <code>docker-compose</code> can mitigate errors referencing <code>firstlogin.sh</code>. </p>"},{"location":"install_setup/digital_ocean/#step-3-set-up-a-domain-name","title":"Step 3: Set up a domain name","text":"<p>You will need a domain name (or subdomain). If you own a domain, point it to the IP address of your droplet. Otherwise, you could use a free service such as DuckDNS.</p>"},{"location":"install_setup/digital_ocean/#step-4-log-in-to-your-droplet","title":"Step 4: Log in to your droplet","text":"<p>SSH into your droplet. You should be presented with the message \"Welcome to the Gramps Web DigitalOcean 1-click app setup!\". If this is not the case, wait a few minutes and try again (the installation is not yet finished).</p> <p>The setup script will ask you for the domain name (e.g. <code>mygrampswebinstance.duckdns.org</code>) and an e-mail address (needed for the Let's Encrypt certificate).</p> <p>When this is done, wait for the setup to be completed in the background</p>"},{"location":"install_setup/digital_ocean/#step-5-launch-gramps-web","title":"Step 5: Launch Gramps Web","text":"<p>Your Gramps Web instance should now be accessible at the root of your domain, with a valid SSL certificate, and it should be showing the first-run assistant.</p>"},{"location":"install_setup/frontend-config/","title":"Frontend customization","text":""},{"location":"install_setup/frontend-config/#customizing-the-frontend","title":"Customizing the frontend","text":"<p>The Gramps Web frontend is a Javascript application that is deployed as a set of static HTML, CSS, and Javascript files. Normally, no special configuration is necessary for the frontend. However, some behaviour can be changed by setting appropriate options in the <code>config.js</code> file at the root of the distribution.</p> <p>The file should have the following structure:</p> <pre><code>window.grampsjsConfig = {\n    option: value\n}\n</code></pre> <p>The following option keys exist.</p> Key Type Description <code>hideRegisterLink</code> boolean If true, hide the registration link on the login page. This should be used for multi-tree deployments. <code>loginRedirect</code> string URL to redirect to when not logged in and navigating to any page other than \"login\" or \"register\" <code>leafletTileUrl</code> string Custom tile URL for Leaflet maps <code>leafletTileSize</code> number Custom tile size for Leaflet maps <code>leafletZoomOffset</code> number Custom zoom offset for Leaflet maps <code>leafletTileAttribution</code> string Custom attribution for Leaflet maps"},{"location":"install_setup/lets_encrypt/","title":"Docker with Let's Encrypt","text":""},{"location":"install_setup/lets_encrypt/#setting-up-https-with-lets-encrypt-and-docker-compose","title":"Setting up HTTPS with Let's Encrypt and Docker Compose","text":"<p>When served to the public internet, Gramps Web must use HTTPS encryption.</p> <p>A particularly convenient option is to use a dockerized Nginx reverse proxy with automated Let's Encrypt certificate generation. This is achieved with this docker-compose.yml. (The nginx_proxy.conf needs to be stored in the same directory to allow uploading large media files to Gramps Web.)</p> <p>Please see the acme-companion docs for how to set up your domain.</p>"},{"location":"install_setup/multi-tree/","title":"Multi-tree setup","text":""},{"location":"install_setup/multi-tree/#setup-for-hosting-multiple-trees","title":"Setup for hosting multiple trees","text":"<p>By default, Gramps Web only allows accessing a single family tree database (\u201ctree\u201d), specified in the configuration file.</p> <p>However, starting with version 0.7.0 of the Gramps Web API backend, it is also possible to serve multiple trees from a single installation. However, each user is (currently) tied to a single tree, so this setup is not suited for sharing trees among users, but for hosting multiple isolated Gramps Web instances.</p>"},{"location":"install_setup/multi-tree/#enable-multi-tree-support","title":"Enable multi-tree support","text":"<p>To enable multi-tree support, the <code>TREE</code> config option must be set to a single asterisk <code>*</code>, e.g. in a configuration file:</p> <pre><code>TREE = \"*\"\n</code></pre> <p>This will make all trees in the server's Gramps database directory accessible (given sufficient user permissions). The tree's ID is the name of the subdirectory. You can list existing trees (names and IDs) with the command</p> <pre><code>python -m gramps_webapi --config /app/config/config.cfg tree list\n</code></pre> <p>In addition, you should set the <code>MEDIA_PREFIX_TREE</code> configuration option to <code>True</code> to ensure media files are stored in separate subfolders. Otherwise, users are able to access media files that belong to a tree they have no permission for!</p>"},{"location":"install_setup/multi-tree/#add-a-user-account-to-a-specific-tree","title":"Add a user account to a specific tree","text":"<p>To add a user to a specific tree, simply add the <code>--tree TREEID</code> command line option to the add user command. You can also POST to the <code>/users/</code> endpoint with the <code>tree</code> property set in the JSON payload.</p> <p>User names and e-mail addresses are required to be unique across all trees.</p>"},{"location":"install_setup/multi-tree/#create-a-new-tree","title":"Create a new tree","text":"<p>To create a new tree, it is recommended to POST to the <code>/trees/</code> endpoint rather than using the Gramps CLI. This will use a UUIDv4 as tree ID, which leads to additional security as the name cannot be guessed. Currently, only SQLite is supported for newly created trees.</p>"},{"location":"install_setup/multi-tree/#authorize","title":"Authorize","text":"<p>To authorize (fetch a token), only user name and password are necessary, like in single-tree mode, since the tree ID is known for each user, so there is no need to provide it.</p>"},{"location":"install_setup/multi-tree/#migrate-existing-media-files","title":"Migrate existing media files","text":"<p>If you want to migrate an existing Gramps Web instance to multi-tree support and are using local media files, you can simply move them to a subfolder of the original location with the tree ID as name.</p> <p>If you are using media files hosted on S3, you can use the script provided in the <code>scripts</code> directory of the <code>gramps-web-api</code> repository:</p> <pre><code>python scripts/s3_rename.py BUCKET_NAME TREE_ID\n</code></pre> <p>This assumes the relevant access keys are set as environment variables already.</p>"},{"location":"install_setup/multi-tree/#migrate-existing-user-database","title":"Migrate existing user database","text":"<p>If you want to enable multi-tree support and reuse existing users, you need to assign them to a specific tree. You can use the following command provided for this purpose,</p> <pre><code>python -m gramps_webapi --config /app/config/config.cfg user fill-tree TREE_ID\n</code></pre>"},{"location":"install_setup/multi-tree/#customize-the-frontend","title":"Customize the frontend","text":"<p>The registration page accessible from the login page does not work in a multi-tree setup, since a tree needs to be specified for registration. It is thus advisable to set <code>hideRegisterLink</code> to <code>true</code> in the frontend configuration.</p>"},{"location":"install_setup/oidc/","title":"OIDC authentication","text":""},{"location":"install_setup/oidc/#oidc-authentication","title":"OIDC Authentication","text":"<p>Gramps Web supports OpenID Connect (OIDC) authentication, allowing users to log in using external identity providers. This includes both popular providers like Google, Microsoft, and GitHub, as well as custom OIDC providers like Keycloak, Authentik, and others.</p>"},{"location":"install_setup/oidc/#overview","title":"Overview","text":"<p>OIDC authentication allows you to:</p> <ul> <li>Use external identity providers for user authentication</li> <li>Support multiple authentication providers simultaneously</li> <li>Map OIDC groups/roles to Gramps Web user roles</li> <li>Implement Single Sign-On (SSO) and Single Sign-Out</li> <li>Optionally disable local username/password authentication</li> </ul>"},{"location":"install_setup/oidc/#configuration","title":"Configuration","text":"<p>To enable OIDC authentication, you need to configure the appropriate settings in your Gramps Web configuration file or environment variables. See the Server Configuration page for a complete list of available OIDC settings.</p> <p>Info</p> <p>When using environment variables, remember to prefix each setting name with <code>GRAMPSWEB_</code> (e.g., <code>GRAMPSWEB_OIDC_ENABLED</code>). See Configuration file vs. environment variables for details.</p>"},{"location":"install_setup/oidc/#built-in-providers","title":"Built-in Providers","text":"<p>Gramps Web has built-in support for popular identity providers. To use them, you only need to provide the client ID and client secret:</p> <ul> <li>Google: <code>OIDC_GOOGLE_CLIENT_ID</code> and <code>OIDC_GOOGLE_CLIENT_SECRET</code></li> <li>Microsoft: <code>OIDC_MICROSOFT_CLIENT_ID</code> and <code>OIDC_MICROSOFT_CLIENT_SECRET</code></li> <li>GitHub: <code>OIDC_GITHUB_CLIENT_ID</code> and <code>OIDC_GITHUB_CLIENT_SECRET</code></li> </ul> <p>You can configure multiple providers simultaneously. The system will automatically detect which providers are available based on the configuration values.</p>"},{"location":"install_setup/oidc/#custom-oidc-providers","title":"Custom OIDC Providers","text":"<p>For custom OIDC providers (like Keycloak, Authentik, or any standard OIDC-compliant provider), use these settings:</p> Key Description <code>OIDC_ENABLED</code> Boolean, whether to enable OIDC authentication. Set to <code>True</code>. <code>OIDC_ISSUER</code> Your provider's issuer URL <code>OIDC_CLIENT_ID</code> Client ID for your OIDC provider <code>OIDC_CLIENT_SECRET</code> Client secret for your OIDC provider <code>OIDC_NAME</code> Custom display name (optional, defaults to \"OIDC\") <code>OIDC_SCOPES</code> OAuth scopes (optional, defaults to \"openid email profile\")"},{"location":"install_setup/oidc/#required-redirect-uris","title":"Required Redirect URIs","text":"<p>When configuring your OIDC provider, you must register the following redirect URI:</p> <p>For OIDC providers that support wildcards: (e.g., Authentik)</p> <ul> <li><code>https://your-gramps-backend.com/api/oidc/callback/*</code></li> </ul> <p>Where <code>*</code> is a regex wildcard. Depending on your provider's regex interpreter this could also be a <code>.*</code> or similar. Ensure that regex is enabled if your provider requires it (e.g., Authentik).</p> <p>For OIDC providers that do not support wildcards: (e.g., Authelia)</p> <ul> <li><code>https://your-gramps-backend.com/api/oidc/callback/?provider=custom</code></li> </ul>"},{"location":"install_setup/oidc/#role-mapping","title":"Role Mapping","text":"<p>Gramps Web can automatically map OIDC groups or roles from your identity provider to Gramps Web user roles. This allows you to manage user permissions centrally in your identity provider.</p>"},{"location":"install_setup/oidc/#configuration_1","title":"Configuration","text":"<p>Use these settings to configure role mapping:</p> Key Description <code>OIDC_ROLE_CLAIM</code> The claim name in the OIDC token that contains the user's groups/roles. Defaults to \"groups\" <code>OIDC_GROUP_ADMIN</code> The group/role name from your OIDC provider that maps to the Gramps \"Admin\" role <code>OIDC_GROUP_OWNER</code> The group/role name from your OIDC provider that maps to the Gramps \"Owner\" role <code>OIDC_GROUP_EDITOR</code> The group/role name from your OIDC provider that maps to the Gramps \"Editor\" role <code>OIDC_GROUP_CONTRIBUTOR</code> The group/role name from your OIDC provider that maps to the Gramps \"Contributor\" role <code>OIDC_GROUP_MEMBER</code> The group/role name from your OIDC provider that maps to the Gramps \"Member\" role <code>OIDC_GROUP_GUEST</code> The group/role name from your OIDC provider that maps to the Gramps \"Guest\" role"},{"location":"install_setup/oidc/#role-mapping-behavior","title":"Role Mapping Behavior","text":"<ul> <li>If no role mapping is configured (no <code>OIDC_GROUP_*</code> variables set), existing user roles are preserved</li> <li>Users are assigned the highest role they are entitled to based on their group membership</li> <li>Role mapping is case-sensitive by default (depends on your OIDC provider)</li> </ul>"},{"location":"install_setup/oidc/#oidc-logout","title":"OIDC Logout","text":"<p>Gramps Web supports Single Sign-Out (SSO logout) for OIDC providers. When a user logs out from Gramps Web after authenticating via OIDC, they will be automatically redirected to the identity provider's logout page if the provider supports the <code>end_session_endpoint</code>.</p>"},{"location":"install_setup/oidc/#backchannel-logout","title":"Backchannel Logout","text":"<p>Gramps Web implements the OpenID Connect Back-Channel Logout specification. This allows identity providers to notify Gramps Web when a user logs out from another application or the identity provider itself.</p>"},{"location":"install_setup/oidc/#configuration_2","title":"Configuration","text":"<p>To configure backchannel logout with your identity provider:</p> <ol> <li> <p>Register the backchannel logout endpoint in your identity provider's client configuration:    </p><pre><code>https://your-gramps-backend.com/api/oidc/backchannel-logout/\n</code></pre><p></p> </li> <li> <p>Configure your provider to send logout notifications. The exact steps depend on your provider:</p> </li> </ol> <p>Keycloak:</p> <ul> <li>In your client configuration, navigate to \"Settings\"</li> <li>Set \"Backchannel Logout URL\" to <code>https://your-gramps-backend.com/api/oidc/backchannel-logout/</code></li> <li>Enable \"Backchannel Logout Session Required\" if you want session-based logout</li> </ul> <p>Authentik:</p> <ul> <li>In your provider configuration, add the backchannel logout URL</li> <li>Ensure the provider is configured to send logout tokens</li> </ul> <p>Token Expiration</p> <p>Due to the stateless nature of JWT tokens, backchannel logout currently logs the logout event but cannot immediately revoke already-issued JWT tokens. Tokens will remain valid until they expire (default: 15 minutes for access tokens).</p> <p>For enhanced security, consider:</p> <ul> <li>Reducing JWT token expiration time (<code>JWT_ACCESS_TOKEN_EXPIRES</code>)</li> <li>Educating users to manually log out from Gramps Web when logging out from your identity provider</li> </ul> <p>How It Works</p> <p>When a user logs out from your identity provider or another application:</p> <ol> <li>The provider sends a <code>logout_token</code> JWT to Gramps Web's backchannel logout endpoint</li> <li>Gramps Web validates the token and logs the logout event</li> <li>The logout token's JTI is added to a blocklist to prevent replay attacks</li> <li>Any new API requests with the user's JWT will be denied once tokens expire</li> </ol>"},{"location":"install_setup/oidc/#example-configurations","title":"Example Configurations","text":""},{"location":"install_setup/oidc/#custom-oidc-provider-keycloak","title":"Custom OIDC Provider (Keycloak)","text":"<pre><code>TREE=\"My Family Tree\"\nBASE_URL=\"https://mytree.example.com\"\nSECRET_KEY=\"...\"  # your secret key\nUSER_DB_URI=\"sqlite:////path/to/users.sqlite\"\n\n# Custom OIDC Configuration\nOIDC_ENABLED=True\nOIDC_ISSUER=\"https://auth.example.com/realms/myrealm\"\nOIDC_CLIENT_ID=\"gramps-web\"\nOIDC_CLIENT_SECRET=\"your-client-secret\"\nOIDC_NAME=\"Family SSO\"\nOIDC_SCOPES=\"openid email profile\"\nOIDC_AUTO_REDIRECT=True  # Optional: automatically redirect to SSO login\nOIDC_DISABLE_LOCAL_AUTH=True  # Optional: disable username/password login\n\n# Optional: Role mapping from OIDC groups to Gramps roles\nOIDC_ROLE_CLAIM=\"groups\"  # or \"roles\" depending on your provider\nOIDC_GROUP_ADMIN=\"gramps-admins\"\nOIDC_GROUP_EDITOR=\"gramps-editors\"\nOIDC_GROUP_MEMBER=\"gramps-members\"\n\nEMAIL_HOST=\"mail.example.com\"\nEMAIL_PORT=465\nEMAIL_USE_TLS=True\nEMAIL_HOST_USER=\"gramps@example.com\"\nEMAIL_HOST_PASSWORD=\"...\" # your SMTP password\nDEFAULT_FROM_EMAIL=\"gramps@example.com\"\n</code></pre>"},{"location":"install_setup/oidc/#built-in-provider-google","title":"Built-in Provider (Google)","text":"<pre><code>TREE=\"My Family Tree\"\nBASE_URL=\"https://mytree.example.com\"\nSECRET_KEY=\"...\"  # your secret key\nUSER_DB_URI=\"sqlite:////path/to/users.sqlite\"\n\n# Google OAuth\nOIDC_GOOGLE_CLIENT_ID=\"your-google-client-id\"\nOIDC_GOOGLE_CLIENT_SECRET=\"your-google-client-secret\"\n</code></pre>"},{"location":"install_setup/oidc/#multiple-providers","title":"Multiple Providers","text":"<p>You can enable multiple OIDC providers simultaneously:</p> <pre><code>TREE=\"My Family Tree\"\nBASE_URL=\"https://mytree.example.com\"\nSECRET_KEY=\"...\"  # your secret key\nUSER_DB_URI=\"sqlite:////path/to/users.sqlite\"\n\n# Custom provider\nOIDC_ENABLED=True\nOIDC_ISSUER=\"https://auth.example.com/realms/myrealm\"\nOIDC_CLIENT_ID=\"gramps-web\"\nOIDC_CLIENT_SECRET=\"your-client-secret\"\nOIDC_NAME=\"Company SSO\"\n\n# Google OAuth\nOIDC_GOOGLE_CLIENT_ID=\"your-google-client-id\"\nOIDC_GOOGLE_CLIENT_SECRET=\"your-google-client-secret\"\n\n# GitHub OAuth\nOIDC_GITHUB_CLIENT_ID=\"your-github-client-id\"\nOIDC_GITHUB_CLIENT_SECRET=\"your-github-client-secret\"\n</code></pre>"},{"location":"install_setup/oidc/#authelia","title":"Authelia","text":"<p>A community-made OIDC setup guide for Gramps Web is available on the official Authelia documentation website.</p>"},{"location":"install_setup/postgres/","title":"Using PostgreSQL","text":""},{"location":"install_setup/postgres/#using-a-postgresql-database","title":"Using a PostgreSQL database","text":"<p>By default, Gramps uses a file-based SQLite database to store the family tree. This works perfectly fine for Gramps Web and is recommended for most users. However, starting with Gramps Web API version 0.3.0, also a PostgreSQL server with a single family tree per database is supported, powered by the Gramps PostgreSQL Addon. Since version 1.0.0, also the SharedPostgreSQL Addon is supported, which allows hosting multiple family trees in a single database, which is particularly useful when used together with Gramps Web API multi-tree support.</p>"},{"location":"install_setup/postgres/#setting-up-the-postgresql-server","title":"Setting up the PostgreSQL server","text":"<p>If you want to set up a new database for use with the PostgreSQLAddon, you can follow the instructions in the Gramps Wiki to set up the server.</p> <p>Alternatively, you can also use Docker Compose to run the PostgreSQL server in a container on the same docker host as Gramps Web.</p> <p>Using a dockerized PostgreSQL with Gramps is only complicated by the fact the the default PostgreSQL images do not have any locales installed, which are however needed by Gramps for localized collation of objects. The easiest option is to use the <code>gramps-postgres</code> image released in this repository. To use it, add the following section to your <code>docker-compose.yml</code>: </p><pre><code>  postgres_gramps:\n    image: ghcr.io/davidmstraub/gramps-postgres:latest\n    restart: unless-stopped\n    environment:\n      POSTGRES_PASSWORD: postgres_password_admin\n      POSTGRES_PASSWORD_GRAMPS: postgres_password_gramps\n      POSTGRES_PASSWORD_GRAMPS_USER: postgres_password_gramps_user\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n</code></pre> and also add <code>postgres_data:</code> as key under the <code>volumes:</code> section of this YAML file. This image contains a separate database for Gramps genealogical data and for the Gramps user database; they each can have separate passwords.<p></p>"},{"location":"install_setup/postgres/#importing-a-gramps-family-tree","title":"Importing a Gramps family tree","text":"<p>Again, if you have set up the PostgreSQL server yourself, you can follow the instructions in the Gramps Wiki to import a family tree into the database.</p> <p>Alternatively, if you have followed the Docker Compose instructions above, you can use the following command to import a Gramps XML file located on your docker host:</p> <pre><code>docker compose run --entrypoint \"\" grampsweb \\\n    gramps -C postgres \\\n    -i /root/.gramps/grampsdb/my_tree.gramps \\\n    --config=database.path:/root/.gramps/grampsdb \\\n    --config=database.backend:postgresql \\\n    --config=database.host:postgres_gramps \\\n    --config=database.port:5432 \\\n    --username=gramps --password=postgres_password_gramps\n</code></pre>"},{"location":"install_setup/postgres/#configuring-web-api-for-use-with-the-database","title":"Configuring Web API for use with the database","text":"<p>To configure Web API for use with the PostgreSQL database, add the following under the <code>environment:</code> key of the <code>grampsweb</code> service in <code>docker-compose.yml</code>:</p> <pre><code>      # the PostgreSQL addon assumes the tree name to be\n      # equal to the database name and here the default\n      # database name of the PostgreSQL image is used\n      TREE: postgres\n      # The credentials must agree with the ones used for\n      # the PostgreSQL container\n      POSTGRES_USER: gramps\n      POSTGRES_PASSWORD: postgres_password_gramps\n</code></pre>"},{"location":"install_setup/postgres/#using-a-shared-postgresql-database-in-a-multi-tree-installation","title":"Using a shared PostgreSQL database in a multi-tree installation","text":"<p>When using a multi-tree setup, the SharedPostgreSQL addon is a convenient option to host all trees, also newly created ones via the API, in a single PostgreSQL database without compromising privacy or security.</p> <p>To achieve this, set up a container based on the <code>gramps-postgres</code> image as described above and simply set the config option <code>NEW_DB_BACKEND</code> to <code>sharedpostgresql</code>, e.g. via the <code>GRAMPSWEB_NEW_DB_BACKEND</code> environment variable.</p>"},{"location":"install_setup/postgres/#using-a-postgresql-database-for-the-user-database","title":"Using a PostgreSQL database for the user database","text":"<p>Independently of which database backend is used for the genealogical data, the user database can be hosted in a PostgreSQL database by providing an appropriate database URL. The <code>gramps-postgres</code> docker image mentioned above contains a separate database <code>grampswebuser</code> that can be used for this purpose. In that case, the appropriate value for the <code>USER_DB_URI</code> config option would be </p><pre><code>postgresql://grampswebuser:postgres_password_gramps_user@postgres_gramps:5432/grampswebuser\n</code></pre><p></p>"},{"location":"install_setup/postgres/#using-a-postgresql-database-for-the-search-index","title":"Using a PostgreSQL database for the search index","text":"<p>Since Gramps Web API version 2.4.0, the search index is hosted either in an SQLite database (the default) or a PostgreSQL database. Also for this purpose, the <code>gramps-postgres</code> image can be used. For the search index, we can use the <code>gramps</code> database provided by the image, regardless of whether we are hosting our genealogical data in PostgreSQL or not (the search index and genealogical data can coexist in the same database). This can be achieved, in the above example, by setting the <code>SEARCH_INDEX_DB_URI</code> config option to </p><pre><code>postgresql://gramps:postgres_password_gramps@postgres_gramps:5432/gramps\n</code></pre><p></p>"},{"location":"install_setup/postgres/#issues","title":"Issues","text":"<p>In case of issues, please monitor the log output of Gramps Web and the PostgreSQL server. In the case of docker, this is achieved with</p> <pre><code>docker compose logs grampsweb\ndocker compose logs postgres_grampsweb\n</code></pre> <p>If you suspect there is an issue with Gramps Web (or the documentation), please file an issue on Github.</p>"},{"location":"install_setup/quickstart/","title":"Try out locally","text":"<p>To try out Gramps Web on your local computer (Linux, Mac, or Windows) without interfering with your Gramps Desktop installation, you can use Docker with the following command:</p> <pre><code>docker run -p \"5055:5000\" -e TREE=new ghcr.io/gramps-project/grampsweb:latest\n</code></pre> <p>This will make a new, empty Gramps Web instance accessible at http://localhost:5055, where you can create an admin user and import a Gramps XML file.</p> <p>Info</p> <p>Since this simple setup does not allow running long tasks in a separate process, importing a large Gramps XML file might fail due to a timeout in the first-run assistant.</p> <p>To use media files from your computer you can mount the Gramps media folder into the container with</p> <pre><code>docker run -p \"5055:5000\" -e TREE=new \\\n  -v /path/to/my/gramps_media_folder:/app/media \\\n  ghcr.io/gramps-project/grampsweb:latest\n</code></pre> <p>Note that this will not persist the changes you make to the database when you restart the container. To properly set up Gramps Web, continue reading about Deployment.</p>"},{"location":"install_setup/s3/","title":"Hosting media on S3","text":""},{"location":"install_setup/s3/#hosting-media-files-on-s3","title":"Hosting media files on S3","text":"<p>Instead of hosting the media files of the family tree on the same server as the Gramps database, they can also be hosted on Amazon S3 or a different API-compatible object storage service. This strongly reduces storage and traffic requirements for the Gramps Web server.</p>"},{"location":"install_setup/s3/#preparing-credentials","title":"Preparing credentials","text":"<p>In your AWS (or other object storage service) account, get an access key ID and secret access key (you may first want to create a separate user with a security policy allowing only access to S3).</p>"},{"location":"install_setup/s3/#upload-media-files","title":"Upload media files","text":"<p>To upload your existing media files to S3, on Linux you can use a local Gramps installation with the S3 Media Uploader Addon, that you can install directly from Gramps desktop. However, some additional configuration is necessary.</p> <p>The addon uses the <code>boto3</code> Python library under the hood. You need to install it first with</p> <pre><code>python3 -m pip install boto3\n</code></pre> <p>On the command line, export the access key ID and secret key to the appropriate environment variables: </p><pre><code>export AWS_ACCESS_KEY_ID=my_access_key_id\nexport AWS_SECRET_ACCESS_KEY=my_secret_access_key\n</code></pre><p></p> <p>Now, you can start the uploader by runing the following command,</p> <pre><code>gramps -O \"My Family Tree\" -a tool \\\n    -p \"name=s3uploader,bucket_name=my_bucket_name\"\n</code></pre> <p>replacing \"My Family Tree\" with the name of your family tree and <code>my_bucket_name</code> with the complete name of your S3 bucket. You will need a dedicated S3 bucket for your Gramps Web instance. If the bucket does not exist yet, the S3 Uploader Addon will attempt to create it.</p>"},{"location":"install_setup/s3/#configure-gramps-web","title":"Configure Gramps Web","text":"<p>To use the new S3 bucket as media source for Gramps Web, simply set the <code>MEDIA_BASE_DIR</code> configuration option to <code>s3://my_bucket_name</code>.</p> <p>When using Docker Compose, the easiest option is to add all environment variables to the <code>env</code> block:</p> <pre><code>env:\n  AWS_ACCESS_KEY_ID: my_access_key_id\n  AWS_SECRET_ACCESS_KEY: my_secret_access_key\n  MEDIA_BASE_DIR: s3://my_bucket_name\n  AWS_DEFAULT_REGION: eu-central-1\n</code></pre> <p>If you want to use an S3-compatible object storage other than AWS (e.g. GCP or for local testing), set the <code>AWS_ENDPOINT_URL</code> environment variable.</p>"},{"location":"install_setup/s3/#synchronizing-media-files","title":"Synchronizing media files","text":"<p>To keep media files in sync between a local Gramps installation and S3-hosted Gramps Web media files, the Gramps Web Sync Addon supports file synchronization via the Web API.</p>"},{"location":"install_setup/setup/","title":"Getting Started","text":""},{"location":"install_setup/setup/#gramps-web-install-setup","title":"Gramps Web Install / Setup","text":"<p>This section deals with the installation and setup of Gramps Web, as well as other options to get started.</p>"},{"location":"install_setup/setup/#getting-started-with-gramps-web","title":"Getting started with Gramps Web","text":"<p>Gramps Web is a web app that runs on a server and is accessed via the web browser. It is meant to be made accessible to authenticated users via the internet.</p> <p>If you want to use Gramps Web for your genealogical research data, you have to choose one of the following options:</p> <ol> <li>Self-host on your own hardware</li> <li>Self-host in the cloud</li> <li>Sign up for a hosted instance</li> </ol> <p>While the first option gives you maximal flexibility and control, it can also be technically challenging.</p> <p>Tip</p> <p>One of the main principles of Gramps Web is to put users in control of their own data at any time, so migrating data from one instance to another is simple. Don't worry about being locked in after having chosen one of the options!</p>"},{"location":"install_setup/setup/#self-host-on-your-own-hardware","title":"Self-host on your own hardware","text":"<p>The most convenient way to self-host Gramps Web is via Docker Compose. We also provide Docker images for the ARM architecture, so you can run Gramps Web on a Raspberry Pi in your basement.</p> <p>See Deploy with Docker for setup instructions.</p>"},{"location":"install_setup/setup/#self-host-in-the-cloud","title":"Self-host in the cloud","text":"<p>Installing Gramps Web can be more challenging than other, simple web applications and is not compatible with ordinary \"shared hosting\" providers. You can sign up for a virtual server and install Gramps Web manually.</p> <p>A simpler option is to use a pre-installed cloud image. One example is our DigitalOcean 1-click app.</p>"},{"location":"install_setup/setup/#sign-up-for-a-hosted-instance","title":"Sign up for a hosted instance","text":"<p>A hosted Gramps Web is the easiest way to get started with Gramps Web, since no installation or configuration is required.</p> <p>Here is a list of dedicated hosting providers for Gramps Web (the Gramps open source community does not take responsibility for their services):</p> <ul> <li>Grampshub (www.grampshub.com), offered by one of the Gramps Web main contributors</li> </ul> <p>If you use a hosted option for Gramps Web, you can skip the rest of this section and jump right to the Administration section.</p>"},{"location":"install_setup/telemetry/","title":"Telemetry","text":""},{"location":"install_setup/telemetry/#telemetry","title":"Telemetry","text":"<p>Starting from Gramps Web API version 3.2.0, Gramps Web by default sends fully anonymized telemetry data every 24 hours to an analytics endpoint controlled by the Gramps Web team. This page contains information about the telemetry data collected, how it is used, and how to disable it if desired.</p>"},{"location":"install_setup/telemetry/#what-data-is-collected","title":"What data is collected?","text":"<p>The telemetry data is a small JSON payload of the following form:</p> <pre><code>{\n  \"server_uuid\": \"c04325bfa7ae4578bcf134ec8fc046a7\",\n  \"tree_uuid\": \"abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890\",\n  \"timestamp\": 1701234567,\n}\n</code></pre> <p>As you can check yourself in the source code, the server and tree identifiers are unique for the server and tree, but they do not contain any personally identifiable information. The <code>timestamp</code> is the current time as a Unix timestamp</p>"},{"location":"install_setup/telemetry/#why-is-the-data-collected","title":"Why is the data collected?","text":"<p>Sending a unique identifier once a day allows the Gramps Web team to track how many unique servers are running Gramps Web, and how many unique trees are being used.</p> <p>This is important to understand the impact on external services that are used by Gramps Web, such as map tiles.</p>"},{"location":"install_setup/telemetry/#how-is-the-data-collected","title":"How is the data collected?","text":"<p>When a request is made to your Gramps Web API server, it checks whether telemetry has been sent in the last 24 hours (by checking a key in the local cache). If not, the above payload is sent to an endpoint that logs the data.</p> <p>The logging endpoint is hosted on Google Cloud Run and is directly deployed from an open source repository, so you can inspect how the data is processed.</p>"},{"location":"install_setup/telemetry/#what-will-be-done-with-the-data","title":"What will be done with the data?","text":"<p>First and foremost, no data beyond the anonymized payload, that could hypothetically be collected (such as the server's IP address), will be used by the Gramps Web team.</p> <p>The collected anonymized IDs and timestamp will be aggregated to produce graphs such as:</p> <ul> <li>Number of active Gramps Web installations as function of time</li> <li>Number of active Gramps Web trees as function of time</li> </ul> <p>These graphs will be published on the Gramps Web documentation site.</p>"},{"location":"install_setup/telemetry/#how-to-disable-telemetry","title":"How to disable telemetry?","text":"<p>Since the statistics data is useful for the Gramps Web team and we have ensured that no personally identifiable data is sent, we would be grateful if you don't disable telemetry!</p> <p>Nevertheless, Gramps Web puts users in full control, so of course you can choose to disable the feature if you want.</p> <p>To do so, simply set the <code>DISABLE_TELEMETRY</code> configuration option to <code>True</code> (e.g. by setting the <code>GRAMPSWEB_DISABLE_TELEMETRY</code> environment varaible to <code>true</code> \u2013 see the configuration docs for details).</p>"},{"location":"install_setup/update/","title":"Update","text":""},{"location":"install_setup/update/#update-gramps-web","title":"Update Gramps Web","text":"<p>If you are using one of the installation methods based on Docker Compose, updating Gramps Web to the latest version is simple. In the folder where your <code>docker-compose.yml</code> is located, run the following commands</p> <pre><code>docker compose pull\ndocker compose up -d\n</code></pre> <p>For minor version jumps of Gramps Web API, this is all that is needed. Do follow the release notes of Gramps Web API though, as there could be breaking changes that require additional attention or configuration changes.</p> <p>Note that the default <code>grampsweb:latest</code> docker image always combines the latest version of the API with the latest version of the frontend. If you want to upgrade the two components separately - which is possible - a more involved setup than described here is necessary.</p>"},{"location":"install_setup/users/","title":"User system","text":""},{"location":"install_setup/users/#user-system","title":"User system","text":"<p>Gramps Web is not meant to be exposed to the internet for public access, but only by authenticated users. User accounts can be created by the site owner via the command line or web interface, or by self-registration and subsequent approval by the site owner.</p>"},{"location":"install_setup/users/#user-roles","title":"User roles","text":"<p>The following user roles are currently defined.</p> Role Role ID Permissions Guest 0 View non-private objects Member 1 Guest + view private objects Contributor* 2 Member + add objects Editor 3 Contributor + edit and delete objects Owner 4 Editor + manage users Admin 5 Owner + edit other trees in multi-tree setup <p>* Note that the \"Contributor\" role is currently only partially supported; e.g., family objects cannot be added since they imply a modification of the underlying Gramps person objects of family members. It is recommended to use the other roles whenever possible.</p>"},{"location":"install_setup/users/#configuring-who-can-use-ai-chat","title":"Configuring who can use AI chat","text":"<p>If you have configured AI chat, you will see an option here to choose which user groups are allowed to use the chat feature.</p>"},{"location":"install_setup/users/#managing-users","title":"Managing users","text":"<p>There are two ways to manage users:</p> <ul> <li>With owner permissions using the web interface</li> <li>On the command line on the server</li> </ul> <p>The owner account required to first access the web app can be added in the onboarding wizard that is automatically launched when accessing Gramps Web with an empty user database.</p>"},{"location":"install_setup/users/#managing-users-on-the-command-line","title":"Managing users on the command line","text":"<p>When using Docker Compose, the basic command is</p> <pre><code>docker compose run grampsweb python3 -m gramps_webapi user COMMAND [ARGS]\n</code></pre> <p>The <code>COMMAND</code> can be <code>add</code> or <code>delete</code>. Use <code>--help</code> for <code>[ARGS]</code> to show the syntax and possible configuration options.</p>"},{"location":"install_setup/users/#approving-self-registered-users","title":"Approving self-registered users","text":"<p>When a user self-registers, they are not granted immediate access. An email is sent to the tree owner about the new user registration and the user is sent an email request to confirm their email address. Successfully confirming their email address changes their role from <code>unconfirmed</code> to <code>disabled</code>. While the user account is in either of those two roles, the user cannot log in. The tree owner must review the user's request and assign the user an appropriate role before they are allowed to log in.</p>"},{"location":"install_setup/v2/","title":"Gramps 5.2 upgrade guide","text":""},{"location":"install_setup/v2/#gramps-52-upgrade-guide","title":"Gramps 5.2 upgrade guide","text":"<p>Gramps 5.2 was released on February 23, 2024. Since it uses a new family tree database schema compared to Gramps 5.1, additional steps are necessary when upgrading Gramps Web to be used with Gramps 5.2. This page describes the necessary steps.</p>"},{"location":"install_setup/v2/#overview-of-the-steps","title":"Overview of the steps","text":"<p>This is an overview of the steps required to upgrade.  It also shows which steps are executed by the administrator of the Gramps Web server, the owner of the family tree, and whether it's needed only for users of the sync addon</p> Server administrator Tree owner Action \u2713 Back up your family tree \u2713 <sup>1</sup> Synchronize Gramps Web with Gramps Desktop \u2713 Update Gramps Web \u2713 Update the tree's database schema \u2713 <sup>1</sup> Update Gramps Desktop \u2713 <sup>1</sup> Install the updated Sync Addon \u2713 Back up your family tree \u2713 <sup>1</sup> Synchronize Gramps Web with Gramps Desktop <p><sup>1</sup> Only needed if you synchronize Gramps Web with Gramps Desktop.</p>"},{"location":"install_setup/v2/#overview-of-the-release-status","title":"Overview of the release status","text":"<p>The following table gives an overview of when the components needed for Gramps Web with Gramps 5.2 have been released.</p> Component Released Gramps 5.2.0 2024-02-23 \u2713 Gramps Web Sync Addon 1.0.4 for Gramps 5.2 2024-02-23 \u2713 Gramps Web API 2.0.0 2024-02-28 \u2713 Gramps Web 23.3.0 2024-02-28 \u2713"},{"location":"install_setup/v2/#detailed-steps","title":"Detailed steps","text":"<p>This section provides more details about some of the individual steps above.</p>"},{"location":"install_setup/v2/#back-up-your-family-tree","title":"Back up your family tree","text":"<p>In Gramps Web, go to the \"Export\" page and select \"Gramps XML (family tree)\" (the default option). Click \"Generate\" and wait until the download of the .gramps file starts.</p> <p>You can also create a backup in Gramps Desktop in the usual way.</p>"},{"location":"install_setup/v2/#update-the-trees-database-schema","title":"Update the tree's database schema","text":"<p>When you access Gramps Web for the first time after having upgraded it, you will be presented with a screen showing the message: </p> <p>The Family Tree you are trying to load is in a schema version not supported by this version of Gramps Web. Therefore you cannot load this Family Tree without upgrading its schema. This action cannot be undone.</p> <p>You can now click on the button \"Upgrade Family Tree\". It will show a progress bar and should not take more than a minute to complete. Don't worry, if you accidentally close your browser window, the conversion will continue in the background.</p> <p>Warning</p> <p>If you use a non-standard setup without background task queue, the database upgrade might fail and your family tree might get corrupted. You can check (before updating Gramps Web) if you are using a background task queue by going to the \"System Information\" section in the settings and making sure it has \"task queue: true\".</p>"},{"location":"install_setup/v2/#update-gramps-desktop","title":"Update Gramps Desktop","text":"<p>Follow the Gramps Desktop installation instructions for your operating system.</p>"},{"location":"install_setup/v2/#install-the-updated-sync-addon","title":"Install the updated Sync Addon","text":"<p>You can use the new Plugin Manager included in Gramps 5.2 -  just search for Gramps Web Sync, click on install, and restart Gramps.</p>"},{"location":"install_setup/v3/","title":"Gramps 6.0 upgrade guide","text":""},{"location":"install_setup/v3/#gramps-60-upgrade-guide","title":"Gramps 6.0 upgrade guide","text":"<p>Gramps 6.0 was released on March 19, 2025. Since it uses a new family tree database schema compared to Gramps 5.2, additional steps are necessary when upgrading Gramps Web to be used with Gramps 6.0. This page describes the necessary steps.</p> <p>Info</p> <p>Last updated: May 4, 2025</p>"},{"location":"install_setup/v3/#overview-of-the-steps","title":"Overview of the steps","text":"<p>This is an overview of the steps required to upgrade.  It also shows which steps are executed by the administrator of the Gramps Web server, the owner of the family tree, and whether it's needed only for users of the sync addon</p> Server administrator Tree owner Action \u2713 Back up your family tree \u2713 <sup>1</sup> Synchronize Gramps Web with Gramps Desktop \u2713 Update Gramps Web \u2713 Update the tree's database schema \u2713 <sup>1</sup> Update Gramps Desktop \u2713 <sup>1</sup> Install the updated Sync Addon \u2713 Back up your family tree \u2713 <sup>1</sup> Synchronize Gramps Web with Gramps Desktop <p><sup>1</sup> Only needed if you synchronize Gramps Web with Gramps Desktop.</p>"},{"location":"install_setup/v3/#overview-of-the-release-status","title":"Overview of the release status","text":"<p>The following table gives an overview of when the components needed for Gramps Web with Gramps 6.0 have been released.</p> Component Released Gramps 6.0.1 2025-04-18 Gramps Web API 3.0.0 2025-05-04 Gramps Web (Frontend) 25.5.0 \u2013 Gramps Web Sync Addon 1.3.2 2025-04-30 SharedPostgreSQL Addon 0.1.12 2025-03-20"},{"location":"install_setup/v3/#detailed-steps","title":"Detailed steps","text":"<p>This section provides more details about some of the individual steps above.</p>"},{"location":"install_setup/v3/#back-up-your-family-tree","title":"Back up your family tree","text":"<p>In Gramps Web, go to the \"Export\" page and select \"Gramps XML (family tree)\" (the default option). Click \"Generate\" and wait until the download of the .gramps file starts.</p> <p>You can also create a backup in Gramps Desktop in the usual way.</p>"},{"location":"install_setup/v3/#update-the-trees-database-schema","title":"Update the tree's database schema","text":"<p>When you access Gramps Web for the first time after having upgraded it, you will be presented with a screen showing the message: </p> <p>The Family Tree you are trying to load is in a schema version not supported by this version of Gramps Web. Therefore you cannot load this Family Tree without upgrading its schema. This action cannot be undone.</p> <p>You can now click on the button \"Upgrade Family Tree\". It will show a progress bar and should not take more than a minute to complete. Don't worry, if you accidentally close your browser window, the conversion will continue in the background.</p> <p>Warning</p> <p>If you use a non-standard setup without background task queue, the database upgrade might fail and your family tree might get corrupted. You can check (before updating Gramps Web) if you are using a background task queue by going to the \"System Information\" section in the settings and making sure it has \"task queue: true\".</p>"},{"location":"install_setup/v3/#update-gramps-desktop","title":"Update Gramps Desktop","text":"<p>Follow the Gramps Desktop installation instructions for your operating system.</p>"},{"location":"install_setup/v3/#install-the-updated-sync-addon","title":"Install the updated Sync Addon","text":"<p>You can use the Plugin Manager in Gramps 6.0 to install the Gramps Web Sync addon. Search for Gramps Web Sync, click on install, and restart Gramps.</p>"},{"location":"user-guide/","title":"Introduction","text":"<p>This section contains the documentation for users of Gramps Web.</p>"},{"location":"user-guide/blog/","title":"Use the blog","text":""},{"location":"user-guide/blog/#use-the-built-in-blog","title":"Use the built-in blog","text":"<p>The blog is meant for presenting stories about your family history research.</p> <p>In the Gramps database, blog posts are represented as sources with a note attached, containing the blog's text, and optionally, media files for the images of the blog post. Gramps Web treats every source with a tag <code>Blog</code> as blog article.</p>"},{"location":"user-guide/blog/#add-a-blog-post","title":"Add a blog post","text":"<p>To add a blog post, you can use Gramps Web or Gramps Desktop (synchronized with Gramps Web), the steps are the same in both cases:</p> <ul> <li>Add a new source. The title of the source will be the title of your blog post, the author of the source will be the author of the post.</li> <li>Optionally, associate the source with a repository corresponding to your Gramps Web blog</li> <li>Add a new note to the source. Write your blog post and copy the text into the note.</li> <li>Optionally, add one or more media files to your source. The first media file will be taken as the post preview picture shown above the text. All media files will be shown below the text as a gallery.</li> <li>Add the label <code>Blog</code> to the source (create it if it doesn't exist)</li> </ul>"},{"location":"user-guide/blog/#relation-between-blog-and-sources","title":"Relation between blog and sources","text":"<p>Since blog posts are just sources, all blog articles also appear on the list of sources and show up as sources in searches. In the source view, there is a button \"show in blog\" that will take you to the blog view for that blog post. The URL of the blog post also contains the Gramps ID of the corresponding source, so an article at <code>yourdomain.com/blog/S0123</code> corresponds to the source at <code>yourdomain.com/source/S0123</code>.</p> <p>At the bottom of every blog post, there is a button \"details\" that will take you to the source view.</p>"},{"location":"user-guide/chat/","title":"AI chat","text":""},{"location":"user-guide/chat/#using-ai-chat","title":"Using AI chat","text":"<p>Info</p> <p>AI chat requires Gramps Web API version 2.5.0 or higher and Gramps Web version 24.10.0 or higher.</p> <p>The chat view in Gramps Web (if available in your installation) gives access to an AI assistant that can answer questions about your family tree.</p> <p>Warning</p> <p>Since this is still a new and evolving feature, some types of question work well while others don't. Also, as with any AI assistant, it can give factually incorrect answers, so be sure to always double check.</p>"},{"location":"user-guide/chat/#how-it-works","title":"How it works","text":"<p>To understand which types of question the assistant can answer, it is helpful to understand how it works below the hood:</p> <ol> <li>The user asks a question.</li> <li>Gramps Web identifies a number of (e.g., ten) Gramps objects that are most likely to contain the information that answers the question. To this end, it uses a technique called \"semantic search\". For instance, if you ask \"What's the name of John Doe's children?\", if a family exists with John Doe as father, it is likely to be among the top results.</li> <li>Gramps Web feeds the user question along with the retrieved context information to a large language model (\"chatbot\") and asks it to extract the right answer.</li> <li>The answer is displayed to the user.</li> </ol>"},{"location":"user-guide/chat/#how-to-ask-a-question","title":"How to ask a question","text":"<p>Due to the way the chat works, it is (currently) not possible for the AI assistant to answer questions about specific relationships other than parents or children, unless this information is contained as text in a note.</p> <p>Since each answer is based on a limited number of top semantic search results, it also cannot answer questions about statistics (\"how many people in my database ...\").</p> <p>To avoid ambiguities and misunderstandings, it is helpful to formulate the question as detailed as possible.</p> <p>Note that large language models are multilingual, so you can talk to it in your own language and it will answer in the same language.</p> <p>Tip</p> <p>Please share your experience about things that work and don't work with the community.</p>"},{"location":"user-guide/chromosome-browser/","title":"Chromosome browser","text":""},{"location":"user-guide/chromosome-browser/#chromosome-browser","title":"Chromosome Browser","text":"<p>The chromosome browser is a tool to visualize a person's DNA matches. It shows the DNA segments shared with other people in the tree as colored bars on the chromosomes.</p> <p>You can find it under the \u201cChromosome Browser\u201d tab in the DNA view.</p> <p>For each chromosome, the upper (light blue) bar represents the copy inherited from the father, the lower (light red) bar the one inherited from the mother. The shared segments are shown as colored bars on top of these. If the side (paternal or maternal) is not known, the segment spans both bars and is shown with hatch marks.</p> <p>Clicking on the name of a match in the legend, only this person's shared segments are shown.</p>"},{"location":"user-guide/dna-matches/","title":"DNA matches","text":""},{"location":"user-guide/dna-matches/#working-with-dna-matches","title":"Working with DNA matches","text":"<p>DNA matches are segments of DNA that agree between to individuals, identified by the presence of markers, so-called SNPs (the acronym for single nucleotide polymorphisms, pronounced \u201csnips\u201d).</p> <p>To obtain this data, you need access to a DNA test that is uploaded to a matching database that allows to view DNA segment match data (e.g. MyHeritage, Gedmatch, FamilytreeDNA). Gramps Web does not perform the matching itself, as it only has access to the data you upload.</p>"},{"location":"user-guide/dna-matches/#entering-dna-match-data","title":"Entering DNA match data","text":"<p>To enter DNA match data, you need edit permissions as the data is stored as a note in the Gramps database. The DNA view, accessible from the main menu, provides a convenient way to enter this data in the right format.</p> <p>To enter a new match, click on the + button in the lower right. In the dialog that opens, select the two individuals. Note that the \u201cFirst person\u201d and the \u201cSecond person\u201d are treated differently: the match is stored as an association from the first to the second person. Only the first person will be selectable for the DNA match view and chromosome browser. Typically, the first person is the one whose DNA test you have access to and the second person is a more distant relative.</p> <p>If the second person is not in the database, you need to create it first by using the \u201cCreate person\u201d button in the top right corner of the user interface. Once you have created the person, you can return to the DNA match view and select the newly created person.</p> <p>Next, paste the raw data into the text field. The data should be a comma or tab separated table of matches, typically containing the chromosome number, the start and end position of the match, the number of SNPs in the match and the lenght of the match in units of centimorgans (cM). You can also drag and drop a file with the match data into the text field.</p> <p>A minimal example of such a table is:</p> <pre><code>Chromosome,Start Location,End Location,Centimorgans,SNPs\n6,6358001,18115715,19.6,7424\n7,150135758,154205894,10.9,2816\n</code></pre> <p>If the format is valid, a preview is shown below the text field as a table. </p> <p>Finally, click on the \u201cSave\u201d button to store the match in the database.</p>"},{"location":"user-guide/dna-matches/#viewing-dna-match-data","title":"Viewing DNA match data","text":"<p>The DNA match view has a dropdown that allows to select each person in the database that has an associated DNA match. Once a person is selected, the DNA match data is shown in a table below the dropdown. It shows the name of the person the match is associated with, the relation to the person selected in the dropdown (automatically determined from the Gramps database), the total length of shared DNA in centimorgans (cM), the number of shared segments, and the length of the largest of these segments.</p> <p>When you click on an individual match, it opens a detail page showing all the segments and whether the match is on the maternal or paternal side. This information can be either entered manually (by providing a <code>P</code> for paternal or <code>M</code> for maternal in a column named <code>Side</code> in the raw data) or automatically determined by Gramps based on the most recent common ancestor.</p>"},{"location":"user-guide/dna-matches/#editing-a-match","title":"Editing a match","text":"<p>You can edit a match by clicking on the pencil button in the bottom right in the match detail view. This opens a similar dialog as when creating a new match, but with the data pre-filled. Note that you can change the raw data, but not the individuals associated with the match \u2013 you need to delete the match and create a new one if you want to change the individuals.</p>"},{"location":"user-guide/dna-matches/#working-with-match-data-in-gramps-desktop","title":"Working with match data in Gramps Desktop","text":"<p>The DNA match data is stored as a note in the Gramps database. The format is compatible with the  DNA Segment Map Addon available for Gramps Desktop. Its wiki page contains more details about how to obtain the data, how to interpret it, and how to enter the data in Gramps.</p> <p>Info</p> <p>Gramps Web API v2.8.0 introduced some changes to the accept a broader range of raw DNA match data, which is not yet available in the Gramps Desktop Addon. The Gramps Desktop Addon will be updated in the future to support the same formats as well.</p>"},{"location":"user-guide/dna/","title":"Overview","text":""},{"location":"user-guide/dna/#using-gramps-web-for-dna-genealogy","title":"Using Gramps Web for DNA genealogy","text":"<p>There are three branches of DNA genealogy dependending on the type of DNA used:</p> <ul> <li>Autosomal chromosomes (numbered 1\u201322) are inherited from father and mother, so the probability of inheriting a piece of DNA from a given ancestor reduces exponentially with the number of generations. This makes them useful for finding degrees of separation with relatives when there is a relatively recent (few generations) common ancestor.</li> <li>The Y chromosome is only passed on from father to son, so it can be used to trace the paternal lineage.</li> <li>Mitochondrial DNA is passed on from mother to daughter, so it can be used to trace the maternal lineage.</li> </ul> <p>At present, Gramps Web provides tools to work with matches from autosomal DNA tests. To obtain this data, you need access to a DNA test that is uploaded to a matching database that allows to view DNA segment match data (e.g. MyHeritage, Gedmatch, FamilytreeDNA). Gramps Web does not perform the matching itself, as it only has access to the data you upload.</p>"},{"location":"user-guide/first-login/","title":"First login","text":"<p>When logging in to Gramps Web for the first time, a Preferences form (labeled User Settings) will be displayed requiring the user to select a language for the frontend and a Home Person. The Home Person selection can also be changed from the Home Page of the website.</p> <p>The Home Person for a user of a Gramps Web website does not have to be the same person that the site's owner chose in Gramps for Desktops \u2014 it is a personal setting that can be different for every user of Gramps Web. The home person is used for the initial view of the family tree and the starting point for most Reports. A typical choice would be for a user to select themselves as Home Person. When collaborating with another member of a Tree, those users might want to set the common ancestor as the Home Person. This ensures a common point of reference for the distant relationships.</p> <p>To select a person as Home Person, start typing a Given or Family Name in the text field and a drop-down list with matches will appear.</p> <p>The language and Home Person settings are stored in the browser's local storage, so they will persist on a given device.</p>"},{"location":"user-guide/gql/","title":"GQL filters","text":""},{"location":"user-guide/gql/#filter-using-the-gramps-query-language","title":"Filter using the Gramps Query Language","text":"<p>The object list views (people, families, events, ...) have an optional advanced filter mode based on the Gramps Query Language (GQL).</p> <p>To use it, type a query in GQL syntax and press enter (or hit the \"apply\" button). The view will be filtered by the query. If the query is invalid, the input field's frame turns red.</p> <p>The GQL syntax is described below, copied from the GQL documentation.</p>"},{"location":"user-guide/gql/#syntax","title":"Syntax","text":"<p>A GQL query is a string composed of statements of the form <code>property operator value</code>, optionally combined with the keywords <code>and</code> and <code>or</code> as well as parentheses.</p>"},{"location":"user-guide/gql/#properties","title":"Properties","text":""},{"location":"user-guide/gql/#class","title":"<code>class</code>","text":"<p>Filters for the Gramps object class and can be one of <code>person</code>, <code>family</code>, <code>event</code>, <code>place</code>, <code>citation</code>, <code>source</code>, <code>repository</code>, <code>media</code>, or <code>note</code>.</p>"},{"location":"user-guide/gql/#object-properties","title":"Object properties","text":"<p>GQL supports querying nested properties of Gramps objects, e.g. <code>primary_name.date.calendar</code>. See below for a full list of properties \u2013 see also Gramps Data Model.</p>"},{"location":"user-guide/gql/#list-elements-by-index","title":"List elements by index","text":"<p>Individual elements in list-like properties can be accessed by positional index in square brackets. This can be combined with nested properties, e.g. <code>primary_name.surname_list[0].surname</code>.</p>"},{"location":"user-guide/gql/#length","title":"<code>length</code>","text":"<p>This is a special property that returns the length of an array-like Gramps property, e.g. <code>media_list.length &gt; 0</code> to get objects with media references.</p>"},{"location":"user-guide/gql/#all-any","title":"<code>all</code>, <code>any</code>","text":"<p>Two more special properties for array-like Gramps properties. <code>all</code> requires a condition to apply to all items of the list, <code>any</code> requires it to apply to at least one item. Both properties can be combined with other properties before and after. Examples: <code>media_list.any.citation_list.length &gt; 0</code> to return objects with media references that have citations; <code>media_list.all.citation_list.length = 0</code> to return objects where all media objects do not have citations.</p>"},{"location":"user-guide/gql/#array-index","title":"Array index","text":"<p>A numerical array index can be used to access specific elements of a list, e.g. <code>child_ref_list[0]</code> for the first child.</p>"},{"location":"user-guide/gql/#get_person-etc","title":"<code>get_person</code>, etc.","text":"<p>While all the preceding properties refer to a single Gramps object, it is also possible to filter on different objects referred to by the initial object. For instance, an event has a place handle in its <code>place</code> property. Using the <code>get_place</code> pseudo-property, GQL switches to the properties of that object. For instance, it is possible to search for <code>class = event and place.get_place.name.value ~ York</code>. This can also be combined with <code>any</code> or <code>all</code>, e.g. <code>class = person and event_ref_list.any.ref.get_event.description ~ farmer</code>.</p>"},{"location":"user-guide/gql/#operators","title":"Operators","text":""},{"location":"user-guide/gql/#_1","title":"<code>=</code>, <code>!=</code>","text":"<p>Equality or inequality. Examples: <code>class = person</code>, <code>class != family</code></p>"},{"location":"user-guide/gql/#_2","title":"<code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>","text":"<p>Comparison. Works for strings as well as numbers. Examples: <code>confidence &lt;= 1</code>, <code>change &gt; 1712477760</code>, <code>gramps_id &gt; \"I2015\"</code></p>"},{"location":"user-guide/gql/#_3","title":"<code>~</code>, <code>!~</code>","text":"<p>Contains or does not contain. Works for lists as well as strings. Examples: <code>gramps_id !~ F00</code>, <code>author ~ David</code>, <code>family_list ~ \"3a16680f7d226e3ac3eefc8b57a\"</code></p>"},{"location":"user-guide/gql/#no-operatorvalue","title":"No operator/value","text":"<p>If no operator and value is given, the value is interpreted as a boolean (true or false). This works for all types of properties and Python rules for casting to true/false are applied. For instance, the query <code>private</code> returns private objects; <code>confidence</code> returns objects where confidence is greater than 0; <code>media_list</code> returns objects with at least one media reference.</p>"},{"location":"user-guide/gql/#values","title":"Values","text":"<p>Values can be numbers or strings. If numbers should be interpreted as strings or special characters like = are involved, enclose the value in strings. Examples: <code>gramps_id = F0001</code>, but <code>gramps_id = \"0001\"</code>.</p>"},{"location":"user-guide/gql/#commented-examples","title":"Commented examples","text":"<pre><code>class = note and private and text.string ~ David\n</code></pre> <p>All private notes that contain the string \"David\" in their text</p> <pre><code>media_list.length &gt;= 10\n</code></pre> <p>All objects (of any class) with 10 or more media references</p> <pre><code>class != person and media_list.any.rect\n</code></pre> <p>All objects that are not a person but have a media reference that is part of an image. Here, <code>media_list.any.rect</code> means that for each of the items in the media list, it is checked whether the <code>rect</code> (rectangle) property has a truthy value, meaning it is a non-empty list. (<code>media_list.any.rect.length &gt; 0</code> would have the same effect.)</p> <pre><code>class = family and child_ref_list.length &gt; 10\n</code></pre> <p>Families with more than 10 children.</p> <pre><code>class = event and date.modifier = 0 and date.dateval[2] &gt; 2020\n</code></pre> <p>Events where the date is a normal date (not a range etc.) and the year is after 2020.</p> <pre><code>note_list.any.get_note.text.string ~ \"David\"\n</code></pre> <p>All objects with at least one note that contains the string \"David\" in their text.</p> <pre><code>class = family and child_ref_list.all.ref.get_person.gender = 0 and child_ref_list.length = 3\n</code></pre> <p>All families with three daughters.</p>"},{"location":"user-guide/gql/#full-list-of-gramps-properties","title":"Full list of Gramps Properties","text":"<p>For a full list of Gramps properties, see the GQL documentation.</p>"},{"location":"user-guide/media/","title":"Add media files","text":"<p>There are two ways to add a new media file (an image, audio file, video file, or any other file):</p>"},{"location":"user-guide/media/#add-a-new-standalone-media-file","title":"Add a new standalone media file","text":"<p>To add a standalone media file, click the + icon in the top app bar and select \"Media Object\".</p> <p>Click on \"select a file\" to select a file from your computer. On a mobile device, clicking this button will give you the option of directly taking a photo with your device's camera.</p> <p>Optionally,</p> <ul> <li>enter a description of the media file under \"title\"</li> <li>enter a date</li> <li>set the media file as private (which will make it visible only to users with sufficient authorization)</li> </ul> <p>Click \"add\" to upload the file and create the media object.</p>"},{"location":"user-guide/media/#add-a-new-media-file-and-link-it-to-another-object","title":"Add a new media file and link it to another object","text":"<p>The following object types in Gramps can have media objects attached: people, families, events, places, sources, and citations.</p> <p>In the detail view of any object, click the blue edit button in the bottom right (if you do not see it, your user does not have edit permissions). Click on the \"gallery\" tab and click the blue + button.</p> <p>A dialog will open that offers the same fields as described in the previous section. Click \"save\" to upload the file, add a new media object, and link it to the viewed object.</p>"},{"location":"user-guide/registration/","title":"Registration","text":"<p>In a single-tree installation, anybody can register a new account at a Gramps Web instance, but it will need to be enabled manually by a site owner before it can be used to log in.</p> <p>In a multi-tree installation, users additionally require the tree ID to sign up; in practice, this means they can sign up using a registration link shared by the tree owner.</p>"},{"location":"user-guide/registration/#1-find-registration-form","title":"1. Find registration form","text":"<p>On the login form on the home page of Gramps Web, usually there is a link \"Register new account\".</p> <p>If this link is missing, it is probably because it is a multi-tree installation of Gramps Web. In that case, contact the tree owner for a registration link.</p> <p>The tree owner can find and copy the registration link under Settings/Administration.</p>"},{"location":"user-guide/registration/#2-submit-registration-form","title":"2. Submit registration form","text":"<p>The registration form has four mandatory fields: username, password, e-mail address, and full name. When all four fields have been filled, click \"submit\" to start the registration process.</p>"},{"location":"user-guide/registration/#3-confirm-e-mail-address","title":"3. Confirm e-mail address","text":"<p>After the form has been submitted, an automated e-mail will be sent to the e-mail address provided containing an e-mail confirmation link. Clicking it will open a confirmation page.</p> <p>If the confirmation e-mail does not arrive (and you have checked your Spam folder), it could be that e-mail has not been configured correctly by the Gramps Web server administrator.</p>"},{"location":"user-guide/registration/#4-enable-account","title":"4. Enable account","text":"<p>After the e-mail address has been confirmed, the tree owner will receive an e-mail notification and can enable the new user account by going to the \"User administration\" section in settings page (accessible via the user icon in the top app bar) and changing the user role from \"disabled\" to any of the other roles.</p> <p>Note that the new user will not receive an automated notification that their account has been enabled, so it is advisible for the administrator to notify them personally.</p>"},{"location":"user-guide/revisions/","title":"Revision history","text":""},{"location":"user-guide/revisions/#revision-history","title":"Revision History","text":"<p>The revision history view shows all edits that have been made to the family tree.</p> <p>The list view shows the edits grouped by \"transactions\". A transaction is a group of one or more additions, deletions, or changes to Gramps objects. For instance, adding a new family with two existing persons as father and mother generates a transaction with one added family object and two modified person objects (because they contain the link to the new family object).</p> <p>Clicking on a transaction opens the transaction detail view. It contains the list of individual additions, deletions, and updates by Gramps object.</p> <p>Selecting an indivdial change opens a view of the raw JSON representation of the Gramps object with additions and deletions highlighted in green and red, respectively.</p>"},{"location":"user-guide/tagging/","title":"Tag people in photos","text":"<p>Gramps Web allows tagging people in photographs, similar to Gramps Desktop, linking the person and the media object. This is simplified by automated face detection.</p> <p>To tag a person in a photo, follow these steps:</p> <ul> <li>Open the detail view of the media object, e.g. by clicking on \"show details\" in the full-screen preview.</li> <li>Click the blue edit button in the bottom-right corner. If you do not see this button, your user does not have edit permissions.</li> <li>Overlayed on the image, you will see boxes with dashed border corresponding to detected facial regions. To tag a person, click on the box to highlight it and click tge \"person\" button to select an existing person.</li> <li>To manually draw a rectangle instead, click the   button</li> <li>To delete an existing tag, select an existing rectangle (with a solid border) and click the   button</li> </ul>"},{"location":"user-guide/tasks/","title":"Manage tasks","text":""},{"location":"user-guide/tasks/#use-the-built-in-task-management","title":"Use the built-in task management","text":"<p>Gramps Web contains a built-in genealogical task management tool. It is meant to enable reserarches to plan and prioritize, but also document their tasks. This is why tasks are represented as sources in the Gramps database. After completing a task, the associated content can serve as a source documenting the research process.</p>"},{"location":"user-guide/tasks/#task-basics","title":"Task basics","text":"<p>Tasks have the following properties:</p> <ul> <li>Status. This can be \"Open\", \"In Progress\", \"Blocked\", or \"Done\"</li> <li>Priority. This can be \"Low\", \"Medium\", or \"High\"</li> <li>Tags. The labels are normal Gramps tags of the underlying source. (Note that all tasks additionally have the <code>ToDo</code> label to identify them as tasks, but this label is hidden in the task list to avoid clutter.)</li> <li>Title. Shown in the task list</li> <li>Description. A rich-text field that can be used to describe the problem statement, but also document any progress made</li> <li>Media. Any media files attached to the task</li> </ul>"},{"location":"user-guide/tasks/#create-a-task","title":"Create a task","text":"<p>Since tasks are normal Gramps objects, they can be edited or created by the same group of users that can edit or create other objects (like people or events).</p> <p>To create a task, click on the + button on the task list page. Enter at least a title. The status will always be \"Open\" on creation.</p>"},{"location":"user-guide/tasks/#edit-a-task","title":"Edit a task","text":"<p>To any of the task's details, click on it in the task list.</p> <p>The task detail page does not have a separate \"edit mode\" like other Gramps objects. Changes to the title, status, and priority are applied immediately. Changes to the rich-text description require clicking the \"save\" button beneath it.</p>"},{"location":"user-guide/tasks/#bulk-change-of-task-properties","title":"Bulk change of task properties","text":"<p>The priority and status of tasks can be changed in bulk by using the checkboxes in the task list for selection and the appropriate buttons above the task list.</p>"},{"location":"user-guide/tasks/#tasks-in-gramps-desktop","title":"Tasks in Gramps Desktop","text":"<p>When adding tasks via Gramps Web, both the sources and the notes will have the <code>ToDo</code> tag attached to them, so the tasks will show up in the desktop To Do Notes Gramplet as well as the To Do Report.</p> <p>To add or edit a task in Gramps Desktop, use the following guidelines</p> <ul> <li>Add a source with tag <code>ToDo</code> and the task title as title</li> <li>Optionally, add a note to the source with tag <code>ToDo</code>, type \"To Do\", and the description as text</li> <li>Add an attribute \"Status\" and set it to \"Open\", \"In Progress\", \"Blocked\", or \"Done\"</li> <li>Add an attribute \"Priority\" and set it to 9 for low, 5 for medium, or 1 for high (these counter-intuitive values are taken from the iCalendar specification)</li> </ul>"},{"location":"user-guide/y-dna/","title":"Y-DNA","text":""},{"location":"user-guide/y-dna/#using-gramps-web-for-y-dna-analysis","title":"Using Gramps Web for Y-DNA Analysis","text":"<p>Note</p> <p>This feature requires Gramps Web API version 3.3.0 or later and Gramps Web frontend version 25.9.0 or later.</p> <p>The Y-DNA view in Gramps Web can use raw Y chromosome single nucleotide polymorphism (SNP) data to determine a person's most likely Y-DNA haplogroup and display the derived ancestors in the human Y chromosome tree along with timing estimates.</p>"},{"location":"user-guide/y-dna/#how-to-obtain-and-store-the-y-dna-snp-data","title":"How to obtain and store the Y-DNA SNP data","text":"<p>To obtain the Y-DNA SNP data, you need to have a Y-DNA test performed through a genetic testing service. The result is represented as a set of mutations (SNPs), each identified by a string (e.g. <code>R-BY44535</code>) and a <code>+</code> or <code>-</code> sign indicating whether the mutation is present or absent. Gramps Web expects the string of all tested SNPs in the format <code>SNP1+, SNP2-, SNP3+,...</code> to be stored in a person attribute of custom type <code>Y-DNA</code> (case sensitive). You can either manually create this attribute in Gramps Web or Gramps Desktop, or navigate to the Y-DNA view in Gramps Web and click the blue \"Add\" button, select the person to add the data to, and paste the SNP string. In any case, the data will be stored as a person attribute in your Gramps database.</p> <p>See below for instructions on how to obtain the SNP data from various testing services.</p>"},{"location":"user-guide/y-dna/#how-it-works","title":"How it works","text":"<p>Once a person has a <code>Y-DNA</code> attribute containing the SNP data, Gramps Web will use the open-source yclade Python library to determine the person's most likely position on the human Y chromosome tree. The tree has been created by the YFull project based on tens of thousands of Y-DNA tests. Note that Gramps Web uses a local copy of the YFull tree, so no data is sent to any third party.</p> <p>The tree is traversed from the root to the leaves, and at each node, the SNPs associated with that node are compared to the person's positively and negatively tested SNPs, and the appropriate branch is followed.</p> <p>The final result is a succession of clades from the root of the tree (the Y-chromosomal \"Adam\") to the most derived clade that is consistent with the person's SNP data. Each clade has an estimated age based on the ages of the samples in the YFull database that belong to that clade.</p> <p>Since Y chromosomes are inherited from father to son, this succession corresponds to an excerpt of the person's patrilineal ancestry.</p>"},{"location":"user-guide/y-dna/#how-to-interpret-the-results","title":"How to interpret the results","text":"<p>The most important piece of information is the person's most likely haplogroup, shown at the top of the page. The name is linked to the corresponding page on the YFull website, which contains more information, such as the country of origin of tested samples belonging to that haplogroup.</p> <p>In the patrineal ancestor tree shown in Gramps Web, the box directly above the tested person is the most recent common ancestor (MRCA) of all tested samples belonging to the person's haplogroup. The date shown for this ancestor is his estimated approximate birth date. The ancestor above him is the ancestor where the mutation defining this haplogroup first appeared.</p> <p>Due to the slow mutation rate of Y chromosomes, the MRCA can be many hundreds of years in the past. For rare haplogroups (i.e. halogroups where few people have been tested so far), it can even be thousands of years.</p>"},{"location":"user-guide/y-dna/#instructions-for-obtaining-snp-data-from-testing-services","title":"Instructions for obtaining SNP data from testing services","text":""},{"location":"user-guide/y-dna/#yseq","title":"YSEQ","text":"<p>Once logged in to \"My Account\", go to \"My Results / View my Alleles\" and navigate to the bottom of the page. The text field \" Allele list compact\" has been added specifically for Gramps Web and is in exactly the right format for pasting into the <code>Y-DNA</code> attribute.</p>"}]}